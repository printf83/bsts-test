"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbsts_test"] = self["webpackChunkbsts_test"] || []).push([["src_docs_bsts_chart_ts"],{

/***/ "./src/docs/bsts/chart.ts":
/*!********************************!*\
  !*** ./src/docs/bsts/chart.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chart: () => (/* binding */ chart)\n/* harmony export */ });\n/* harmony import */ var _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @printf83/bsts */ \"./node_modules/@printf83/bsts/build/esm/index.js\");\n/* harmony import */ var _ctl_main_content_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../ctl/main/content.js */ \"./src/ctl/main/content.ts\");\n/* harmony import */ var _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../ctl/example/_index.js */ \"./src/ctl/example/_index.ts\");\n/* harmony import */ var chart_js_auto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! chart.js/auto */ \"./node_modules/chart.js/auto/auto.js\");\n\n\n\n\nconst drawValuePlugin = (arg) => {\n    var _a, _b, _c, _d;\n    (_a = arg.fonstSizeAdjustment) !== null && _a !== void 0 ? _a : (arg.fonstSizeAdjustment = 0.35);\n    (_b = arg.fontFamily) !== null && _b !== void 0 ? _b : (arg.fontFamily = \"Arial\");\n    (_c = arg.fontSize) !== null && _c !== void 0 ? _c : (arg.fontSize = 40);\n    (_d = arg.lineColor) !== null && _d !== void 0 ? _d : (arg.lineColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarHexColor(\"--bs-body\"));\n    return {\n        id: \"bsts_draw_value\",\n        afterDraw: (chart) => {\n            var _a, _b;\n            const ctx = chart.ctx;\n            const w = chart.width;\n            const h = chart.height;\n            const x = w * 0.5;\n            const y = h * 0.5;\n            ctx.font = `${arg.fontSize}px ${arg.fontFamily}`;\n            const approxFontHeight = parseInt(ctx.font);\n            ctx.fillStyle = arg.lineColor ? arg.lineColor : \"#000\";\n            ctx.textAlign = \"center\";\n            ctx.fillText(`${(_b = (_a = chart.data.datasets[0]) === null || _a === void 0 ? void 0 : _a.data[0]) === null || _b === void 0 ? void 0 : _b.toString()}%`, x, y + approxFontHeight * arg.fonstSizeAdjustment);\n        },\n    };\n};\nconst randomDoughnutData = (id, chart) => {\n    const canvas = document.getElementById(id);\n    if (canvas) {\n        if (chart &&\n            chart.data.datasets &&\n            chart.data.datasets.length >= 0 &&\n            chart.data.datasets[0] &&\n            chart.data.datasets[0].data) {\n            const value = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.rndBetween(0, 100);\n            chart.data.datasets[0].data = [value, 100 - value];\n            chart.update();\n            setTimeout((id, chart) => {\n                randomDoughnutData(id, chart);\n            }, 1000, id, chart);\n        }\n    }\n};\nconst randomLineData = (id, chart) => {\n    var _a, _b;\n    const canvas = document.getElementById(id);\n    if (canvas) {\n        if (chart &&\n            chart.data.datasets &&\n            chart.data.datasets.length >= 0 &&\n            chart.data.datasets[0] &&\n            chart.data.datasets[0].data) {\n            const value = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.rndBetween(0, 100);\n            (_a = chart.data.labels) === null || _a === void 0 ? void 0 : _a.shift();\n            (_b = chart.data.labels) === null || _b === void 0 ? void 0 : _b.push(\"\");\n            chart.data.datasets[0].data.push(value);\n            chart.data.datasets[0].data.shift();\n            chart.update(\"none\");\n            setTimeout((id, chart) => {\n                randomLineData(id, chart);\n            }, 1000, id, chart);\n        }\n    }\n};\nconst randomBarData = (id, chart) => {\n    var _a, _b;\n    const canvas = document.getElementById(id);\n    if (canvas) {\n        if (chart &&\n            chart.data.datasets &&\n            chart.data.datasets.length >= 0 &&\n            chart.data.datasets[0] &&\n            chart.data.datasets[0].data &&\n            chart.data.datasets[1] &&\n            chart.data.datasets[1].data) {\n            const value = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.rndBetween(0, 100);\n            (_a = chart.data.labels) === null || _a === void 0 ? void 0 : _a.shift();\n            (_b = chart.data.labels) === null || _b === void 0 ? void 0 : _b.push(\"\");\n            chart.data.datasets[0].data.push(value);\n            chart.data.datasets[0].data.shift();\n            chart.data.datasets[1].data.push(100 - value);\n            chart.data.datasets[1].data.shift();\n            chart.update(\"none\");\n            setTimeout((id, chart) => {\n                randomBarData(id, chart);\n            }, 1000, id, chart);\n        }\n    }\n};\nconst chart = {\n    title: \"ChartJS\",\n    description: \"Example using bsts with Chart.js\",\n    item: (db) => {\n        (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_1__.resetContentIndex)();\n        return [\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.title(\"Doughnut\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_1__.getContentCode)(db),\n                    extention: [\n                        {\n                            name: \"RANDOMDATA\",\n                            rename: \"randomDoughnutData\",\n                            output: randomDoughnutData,\n                        },\n                    ],\n                    output: () => {\n                        const id = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.UUID();\n                        const lineColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-primary\");\n                        const lineColor2 = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-secondary-bg\");\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container({ style: { maxWidth: \"380px\" } }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body({ padding: 2 }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.canvas({\n                            ratio: \"21x9\",\n                            id: id,\n                            on: {\n                                build: (event) => {\n                                    const target = event.target;\n                                    const res = new chart_js_auto__WEBPACK_IMPORTED_MODULE_3__[\"default\"](target, {\n                                        type: \"doughnut\",\n                                        data: {\n                                            datasets: [\n                                                {\n                                                    data: [0, 100],\n                                                    borderWidth: 0,\n                                                    backgroundColor: [\n                                                        lineColor,\n                                                        lineColor2,\n                                                    ],\n                                                },\n                                            ],\n                                        },\n                                        options: {\n                                            aspectRatio: 2,\n                                            cutout: \"80%\",\n                                            rotation: 270,\n                                            plugins: {\n                                                legend: {\n                                                    display: false,\n                                                },\n                                                tooltip: {\n                                                    enabled: false,\n                                                },\n                                            },\n                                        },\n                                    });\n                                    randomDoughnutData(id, res);\n                                },\n                            },\n                        })));\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.title(\"Doughnut with label\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_1__.getContentCode)(db),\n                    extention: [\n                        {\n                            name: \"RANDOMDATA\",\n                            rename: \"randomDoughnutData\",\n                            output: randomDoughnutData,\n                        },\n                        {\n                            name: \"DRAWVALUE\",\n                            rename: \"drawValuePlugin\",\n                            output: drawValuePlugin,\n                        },\n                    ],\n                    output: () => {\n                        const id = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.UUID();\n                        // const fontFamily = core.getCSSVar(\"--bs-font-sans-serif\");\n                        const lineColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-primary\");\n                        const lineColor2 = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-secondary-bg\");\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container({ style: { maxWidth: \"380px\" } }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body({ padding: 2, position: \"relative\" }, [\n                            //label\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\n                                textColor: \"primary\",\n                                position: \"absolute\",\n                                top: 50,\n                                start: 50,\n                                tMiddle: \"x\",\n                                textAlign: \"center\",\n                            }, [\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.caption({\n                                    icon: new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.icon({\n                                        id: \"device-hdd-fill\",\n                                        fontSize: 3,\n                                    }),\n                                    iconPosition: \"bottom\",\n                                }),\n                            ]),\n                            //chart\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.canvas({\n                                ratio: \"21x9\",\n                                id: id,\n                                on: {\n                                    build: (event) => {\n                                        const target = event.target;\n                                        const res = new chart_js_auto__WEBPACK_IMPORTED_MODULE_3__[\"default\"](target, {\n                                            type: \"doughnut\",\n                                            data: {\n                                                datasets: [\n                                                    {\n                                                        data: [0, 100],\n                                                        borderWidth: 0,\n                                                        backgroundColor: [\n                                                            lineColor,\n                                                            lineColor2,\n                                                        ],\n                                                    },\n                                                ],\n                                            },\n                                            // plugins: [\n                                            // \tdrawValuePlugin({\n                                            // \t\tfontFamily,\n                                            // \t\tlineColor,\n                                            // \t\tfonstSizeAdjustment: -0.15,\n                                            // \t}),\n                                            // ],\n                                            options: {\n                                                aspectRatio: 2,\n                                                cutout: \"80%\",\n                                                rotation: 270,\n                                                plugins: {\n                                                    legend: {\n                                                        display: false,\n                                                    },\n                                                    tooltip: {\n                                                        enabled: false,\n                                                    },\n                                                },\n                                            },\n                                        });\n                                        randomDoughnutData(id, res);\n                                    },\n                                },\n                            }),\n                        ]));\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.section({ id: \"doughnut_180\" }, [\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.title({ id: \"doughnut_180\" }, \"180° doughnut\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_1__.getContentCode)(db),\n                    extention: [\n                        {\n                            name: \"RANDOMDATA\",\n                            rename: \"randomDoughnutData\",\n                            output: randomDoughnutData,\n                        },\n                    ],\n                    output: () => {\n                        const id = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.UUID();\n                        const lineColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-primary\");\n                        const lineColor2 = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-secondary-bg\");\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container({ style: { maxWidth: \"380px\" } }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body({ padding: 2 }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.canvas({\n                            ratio: \"21x9\",\n                            id: id,\n                            on: {\n                                build: (event) => {\n                                    const target = event.target;\n                                    const res = new chart_js_auto__WEBPACK_IMPORTED_MODULE_3__[\"default\"](target, {\n                                        type: \"doughnut\",\n                                        data: {\n                                            datasets: [\n                                                {\n                                                    data: [0, 100],\n                                                    borderWidth: 0,\n                                                    backgroundColor: [\n                                                        lineColor,\n                                                        lineColor2,\n                                                    ],\n                                                },\n                                            ],\n                                        },\n                                        options: {\n                                            aspectRatio: 2,\n                                            cutout: \"90%\",\n                                            circumference: 180,\n                                            rotation: 270,\n                                            plugins: {\n                                                legend: {\n                                                    display: false,\n                                                },\n                                                tooltip: {\n                                                    enabled: false,\n                                                },\n                                            },\n                                        },\n                                    });\n                                    randomDoughnutData(id, res);\n                                },\n                            },\n                        })));\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.section({ id: \"doughnut_180_label\" }, [\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.title({ id: \"doughnut_180_label\" }, \"180° doughnut with label\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_1__.getContentCode)(db),\n                    extention: [\n                        {\n                            name: \"RANDOMDATA\",\n                            rename: \"randomDoughnutData\",\n                            output: randomDoughnutData,\n                        },\n                        {\n                            name: \"DRAWVALUE\",\n                            rename: \"drawValuePlugin\",\n                            output: drawValuePlugin,\n                        },\n                    ],\n                    output: () => {\n                        const id = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.UUID();\n                        // const fontFamily = core.getCSSVar(\"--bs-font-sans-serif\");\n                        const lineColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-primary\");\n                        const lineColor2 = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-secondary-bg\");\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container({ style: { maxWidth: \"380px\" } }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body({ padding: 2, position: \"relative\" }, [\n                            //label\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\n                                textColor: \"primary\",\n                                position: \"absolute\",\n                                bottom: 0,\n                                start: 50,\n                                tMiddle: \"x\",\n                                textAlign: \"center\",\n                                marginBottom: 4,\n                            }, [\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.caption({\n                                    icon: new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.icon({\n                                        id: \"memory\",\n                                        fontSize: 3,\n                                    }),\n                                }, \"RAM Usage\"),\n                            ]),\n                            //chart\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.canvas({\n                                ratio: \"21x9\",\n                                id: id,\n                                on: {\n                                    build: (event) => {\n                                        const target = event.target;\n                                        const res = new chart_js_auto__WEBPACK_IMPORTED_MODULE_3__[\"default\"](target, {\n                                            type: \"doughnut\",\n                                            data: {\n                                                datasets: [\n                                                    {\n                                                        data: [0, 100],\n                                                        borderWidth: 0,\n                                                        backgroundColor: [\n                                                            lineColor,\n                                                            lineColor2,\n                                                        ],\n                                                    },\n                                                ],\n                                            },\n                                            // plugins: [\n                                            // \tdrawValuePlugin({\n                                            // \t\tfontFamily,\n                                            // \t\tlineColor,\n                                            // \t\tfontSize: 60,\n                                            // \t}),\n                                            // ],\n                                            options: {\n                                                aspectRatio: 1.75,\n                                                cutout: \"90%\",\n                                                circumference: 180,\n                                                rotation: 270,\n                                                plugins: {\n                                                    legend: {\n                                                        display: false,\n                                                    },\n                                                    tooltip: {\n                                                        enabled: false,\n                                                    },\n                                                },\n                                            },\n                                        });\n                                        randomDoughnutData(id, res);\n                                    },\n                                },\n                            }),\n                        ]));\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.section({ id: \"doughnut_315\" }, [\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.title({ id: \"doughnut_315\" }, \"315° doughnut\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_1__.getContentCode)(db),\n                    extention: [\n                        {\n                            name: \"RANDOMDATA\",\n                            rename: \"randomDoughnutData\",\n                            output: randomDoughnutData,\n                        },\n                    ],\n                    output: () => {\n                        const id = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.UUID();\n                        const lineColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-primary\");\n                        const lineColor2 = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-secondary-bg\");\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container({ style: { maxWidth: \"380px\" } }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body({ padding: 2 }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.canvas({\n                            ratio: \"21x9\",\n                            id: id,\n                            on: {\n                                build: (event) => {\n                                    const target = event.target;\n                                    const res = new chart_js_auto__WEBPACK_IMPORTED_MODULE_3__[\"default\"](target, {\n                                        type: \"doughnut\",\n                                        data: {\n                                            datasets: [\n                                                {\n                                                    data: [0, 100],\n                                                    borderWidth: 0,\n                                                    backgroundColor: [\n                                                        lineColor,\n                                                        lineColor2,\n                                                    ],\n                                                },\n                                            ],\n                                        },\n                                        options: {\n                                            aspectRatio: 2,\n                                            cutout: \"80%\",\n                                            circumference: 315,\n                                            rotation: 202.5,\n                                            plugins: {\n                                                legend: {\n                                                    display: false,\n                                                },\n                                                tooltip: {\n                                                    enabled: false,\n                                                },\n                                            },\n                                        },\n                                    });\n                                    randomDoughnutData(id, res);\n                                },\n                            },\n                        })));\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.section({ id: \"doughnut_315_label\" }, [\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.title({ id: \"doughnut_315_label\" }, \"315° doughnut with icon and label\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_1__.getContentCode)(db),\n                    extention: [\n                        {\n                            name: \"RANDOMDATA\",\n                            rename: \"randomDoughnutData\",\n                            output: randomDoughnutData,\n                        },\n                        {\n                            name: \"DRAWVALUE\",\n                            rename: \"drawValuePlugin\",\n                            output: drawValuePlugin,\n                        },\n                    ],\n                    output: () => {\n                        const id = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.UUID();\n                        // const fontFamily = core.getCSSVar(\"--bs-font-sans-serif\");\n                        const lineColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-primary\");\n                        const lineColor2 = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-secondary-bg\");\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container({ style: { maxWidth: \"380px\" } }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body({ padding: 2, position: \"relative\" }, [\n                            //label\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\n                                textColor: \"primary\",\n                                position: \"absolute\",\n                                bottom: 0,\n                                start: 50,\n                                tMiddle: \"x\",\n                                textAlign: \"center\",\n                            }, [\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.caption({\n                                    icon: new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.icon({\n                                        id: \"cpu-fill\",\n                                        fontSize: 3,\n                                    }),\n                                    iconPosition: \"bottom\",\n                                }, \"CPU Usage\"),\n                            ]),\n                            //chart\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.canvas({\n                                ratio: \"21x9\",\n                                id: id,\n                                on: {\n                                    build: (event) => {\n                                        const target = event.target;\n                                        const res = new chart_js_auto__WEBPACK_IMPORTED_MODULE_3__[\"default\"](target, {\n                                            type: \"doughnut\",\n                                            data: {\n                                                datasets: [\n                                                    {\n                                                        data: [0, 100],\n                                                        borderWidth: 0,\n                                                        backgroundColor: [\n                                                            lineColor,\n                                                            lineColor2,\n                                                        ],\n                                                    },\n                                                ],\n                                            },\n                                            // plugins: [\n                                            // \tdrawValuePlugin({ fontFamily, lineColor }),\n                                            // ],\n                                            options: {\n                                                aspectRatio: 2,\n                                                cutout: \"80%\",\n                                                circumference: 315,\n                                                rotation: 202.5,\n                                                plugins: {\n                                                    legend: {\n                                                        display: false,\n                                                    },\n                                                    tooltip: {\n                                                        enabled: false,\n                                                    },\n                                                },\n                                            },\n                                        });\n                                        randomDoughnutData(id, res);\n                                    },\n                                },\n                            }),\n                        ]));\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.title(\"Line\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_1__.getContentCode)(db),\n                    extention: [\n                        { name: \"RANDOMDATA\", rename: \"randomLineData\", output: randomLineData },\n                    ],\n                    output: () => {\n                        const id = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.UUID();\n                        const fillColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-primary-bg-subtle\", 0.5);\n                        const lineColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-primary\");\n                        const data = Array(10)\n                            .fill(\"\")\n                            .map(() => {\n                            return _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.rndBetween(1, 100);\n                        });\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container({ style: { maxWidth: \"380px\" } }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body({ padding: 2 }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.canvas({\n                            ratio: \"21x9\",\n                            id: id,\n                            on: {\n                                build: (event) => {\n                                    const target = event.target;\n                                    const res = new chart_js_auto__WEBPACK_IMPORTED_MODULE_3__[\"default\"](target, {\n                                        type: \"line\",\n                                        data: {\n                                            labels: Array(data.length).fill(\"\"),\n                                            datasets: [\n                                                {\n                                                    data: data,\n                                                    borderWidth: 1,\n                                                    pointRadius: 0,\n                                                    tension: 0.5,\n                                                    borderColor: lineColor,\n                                                    fill: {\n                                                        target: \"origin\",\n                                                        above: fillColor,\n                                                    },\n                                                },\n                                            ],\n                                        },\n                                        options: {\n                                            plugins: {\n                                                legend: {\n                                                    display: false,\n                                                },\n                                                tooltip: {\n                                                    enabled: false,\n                                                },\n                                            },\n                                            scales: {\n                                                x: { display: false },\n                                                y: {\n                                                    display: false,\n                                                    beginAtZero: true,\n                                                },\n                                            },\n                                        },\n                                    });\n                                    randomLineData(id, res);\n                                },\n                            },\n                        })));\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.title(\"Bar\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_1__.getContentCode)(db),\n                    extention: [\n                        { name: \"RANDOMDATA\", rename: \"randomLineData\", output: randomLineData },\n                    ],\n                    output: () => {\n                        const id = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.UUID();\n                        const fillColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-primary-bg-subtle\", 0.5);\n                        const backgroundColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-primary\");\n                        const data = Array(30)\n                            .fill(\"\")\n                            .map(() => {\n                            return _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.rndBetween(1, 100);\n                        });\n                        const data2 = data.map((i) => {\n                            return 100 - i;\n                        });\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container({ style: { maxWidth: \"380px\" } }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body({ padding: 2 }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.canvas({\n                            ratio: \"21x9\",\n                            id: id,\n                            on: {\n                                build: (event) => {\n                                    const target = event.target;\n                                    const res = new chart_js_auto__WEBPACK_IMPORTED_MODULE_3__[\"default\"](target, {\n                                        type: \"bar\",\n                                        data: {\n                                            labels: Array(data.length).fill(\"\"),\n                                            datasets: [\n                                                {\n                                                    data: data,\n                                                    backgroundColor: backgroundColor,\n                                                },\n                                                {\n                                                    data: data2,\n                                                    backgroundColor: fillColor,\n                                                },\n                                            ],\n                                        },\n                                        options: {\n                                            plugins: {\n                                                legend: {\n                                                    display: false,\n                                                },\n                                                tooltip: {\n                                                    enabled: false,\n                                                },\n                                            },\n                                            scales: {\n                                                x: { display: false, stacked: true },\n                                                y: {\n                                                    stacked: true,\n                                                    display: false,\n                                                    beginAtZero: true,\n                                                },\n                                            },\n                                        },\n                                    });\n                                    randomBarData(id, res);\n                                },\n                            },\n                        })));\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.title(\"Line with grid\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_1__.getContentCode)(db),\n                    extention: [\n                        {\n                            name: \"RANDOMDATA\",\n                            rename: \"randomLineData\",\n                            output: randomLineData,\n                        },\n                    ],\n                    output: () => {\n                        const id = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.UUID();\n                        const fillColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-primary-bg-subtle\", 0.5);\n                        const lineColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-primary\");\n                        const gridColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-tertiary-bg\");\n                        const data = Array(10)\n                            .fill(\"\")\n                            .map(() => {\n                            return _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.rndBetween(0, 100);\n                        });\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container({ style: { maxWidth: \"380px\" } }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body({ padding: 2 }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.canvas({\n                            ratio: \"21x9\",\n                            id: id,\n                            on: {\n                                build: (event) => {\n                                    const target = event.target;\n                                    const res = new chart_js_auto__WEBPACK_IMPORTED_MODULE_3__[\"default\"](target, {\n                                        type: \"line\",\n                                        data: {\n                                            labels: Array(data.length).fill(\"\"),\n                                            datasets: [\n                                                {\n                                                    data: data,\n                                                    borderWidth: 1,\n                                                    pointRadius: 0,\n                                                    tension: 0.5,\n                                                    borderColor: lineColor,\n                                                    fill: {\n                                                        target: \"origin\",\n                                                        above: fillColor,\n                                                    },\n                                                },\n                                            ],\n                                        },\n                                        options: {\n                                            plugins: {\n                                                legend: {\n                                                    display: false,\n                                                },\n                                                tooltip: {\n                                                    enabled: false,\n                                                },\n                                            },\n                                            scales: {\n                                                x: {\n                                                    ticks: {\n                                                        display: false,\n                                                    },\n                                                    grid: {\n                                                        color: gridColor,\n                                                    },\n                                                },\n                                                y: {\n                                                    beginAtZero: true,\n                                                    grid: {\n                                                        color: gridColor,\n                                                    },\n                                                },\n                                            },\n                                        },\n                                    });\n                                    randomLineData(id, res);\n                                },\n                            },\n                        })));\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.title(\"Chart in modal\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_2__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_1__.getContentCode)(db),\n                    extention: [\n                        { name: \"RANDOMDATA\", rename: \"randomLineData\", output: randomLineData },\n                    ],\n                    output: () => {\n                        const fillColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-primary-bg-subtle\", 0.5);\n                        const lineColor = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.getCSSVarRgbColor(\"--bs-primary\");\n                        const item = (arg) => {\n                            const id = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.UUID();\n                            return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container(new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body({ padding: 2 }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.canvas({\n                                ratio: \"21x9\",\n                                id: id,\n                                on: {\n                                    build: (event) => {\n                                        const target = event.target;\n                                        const id = target.id;\n                                        //dialog show after 300 ms\n                                        setTimeout((target, id) => {\n                                            const res = new chart_js_auto__WEBPACK_IMPORTED_MODULE_3__[\"default\"](target, {\n                                                type: \"line\",\n                                                data: {\n                                                    labels: Array(arg.data.length).fill(\"\"),\n                                                    datasets: [\n                                                        {\n                                                            data: arg.data,\n                                                            borderWidth: 1,\n                                                            pointRadius: 0,\n                                                            tension: 0.5,\n                                                            borderColor: lineColor,\n                                                            fill: {\n                                                                target: \"origin\",\n                                                                above: fillColor,\n                                                            },\n                                                        },\n                                                    ],\n                                                },\n                                                options: {\n                                                    plugins: {\n                                                        legend: {\n                                                            display: false,\n                                                        },\n                                                        tooltip: {\n                                                            enabled: false,\n                                                        },\n                                                    },\n                                                    scales: {\n                                                        x: { display: false },\n                                                        y: {\n                                                            display: false,\n                                                            beginAtZero: true,\n                                                        },\n                                                    },\n                                                },\n                                            });\n                                            randomLineData(id, res);\n                                        }, 300, target, id);\n                                    },\n                                },\n                            })));\n                        };\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\n                            on: {\n                                click: () => {\n                                    _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.modal.show(_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.modal.create({\n                                        title: \"Chatjs example\",\n                                        scrollable: true,\n                                        elem: new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\n                                            display: \"grid\",\n                                            gridTemplateColumns: \"1fr 1fr\",\n                                            gap: 2,\n                                        }, new Array(4).fill(\"\").map(() => {\n                                            return item({\n                                                data: Array(10)\n                                                    .fill(\"\")\n                                                    .map(() => {\n                                                    return _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.rndBetween(0, 100);\n                                                }),\n                                            });\n                                        })),\n                                        btn: [\"ok\", \"cancel\"],\n                                    }));\n                                },\n                            },\n                        }, \"Test\");\n                    },\n                }),\n            ]),\n        ];\n    },\n};\n\n\n//# sourceURL=webpack://bsts-test/./src/docs/bsts/chart.ts?");

/***/ })

}]);