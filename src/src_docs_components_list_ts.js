"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbsts_test"] = self["webpackChunkbsts_test"] || []).push([["src_docs_components_list_ts"],{

/***/ "./src/docs/components/list.ts":
/*!*************************************!*\
  !*** ./src/docs/components/list.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   list: () => (/* binding */ list)\n/* harmony export */ });\n/* harmony import */ var _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @printf83/bsts */ \"../bsts/build/esm/index.js\");\n/* harmony import */ var _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../ctl/example/_index.js */ \"./src/ctl/example/_index.ts\");\n/* harmony import */ var _ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../ctl/main/content.js */ \"./src/ctl/main/content.ts\");\n\n\n\nconst list = {\n    title: \"List group\",\n    description: \"List groups are a flexible and powerful component for displaying a series of content. Modify and extend them to support just about any content within.\",\n    item: (db) => {\n        (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.resetContentIndex)();\n        return [\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Basic example\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"The most basic list group is an unordered list ({{b.list.container}}) with list items ({{b.list.item}}) and the proper classes. Build upon it with the options that follow, or with your own CSS as needed.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container([\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"An item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A second item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A third item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A fourth item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"And a fifth one\"),\n                        ]);\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Active items\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Add {{active:true}} to a {{b.list.item}} to indicate the current active selection.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container([\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item({ active: true }, \"An active item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A second item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A third item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A fourth item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"And a fifth one\"),\n                        ]);\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Disabled items\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Add {{disabled:true}} to a {{b.list.item}} to make it appear disabled.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container([\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item({ disabled: true }, \"A disabled item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A second item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A third item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A fourth item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"And a fifth one\"),\n                        ]);\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Links and buttons\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Use {{b.tabList.item({href:''})}}s to create actionable list group items with hover, disabled, and active states by set {{action:true}} property. Bootstrap separate these pseudo-classes to ensure list groups made of non-interactive elements (like {{h.li}}s or {{h.div}}s) donâ€™t provide a click or tap affordance.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"{{bsts}} not {{b::use the standard}} {{cb::.btn}}{{b:: classes here}}.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.container([\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({ href: \"#\", active: true }, \"The current link item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({ href: \"#\" }, \"A second link item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({ href: \"#\" }, \"A third link item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({ href: \"#\" }, \"A fourth link item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({ disabled: true }, \"A disabled link item\"),\n                        ]);\n                    },\n                }),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"With {{b.list.item}}s or {{b.tabList.item}}, {{bsts}} also make use of the {{disabled}} attribute instead of the {{.disabled}} class automaticly.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.container([\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({ href: \"#\", action: true, active: true }, \"The current link item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({ href: \"#\", action: true }, \"A second link item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({ href: \"#\", action: true }, \"A third link item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({ href: \"#\", action: true }, \"A fourth link item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({ disabled: true, action: true }, \"A disabled link item\"),\n                        ]);\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Flush\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Set {{flush:true}} property on {{b.list.container}} to remove some borders and rounded corners to render list group items edge-to-edge in a parent container (e.g., cards).\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ flush: true }, [\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"An item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A second item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A third item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A fourth item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"And a fifth one\"),\n                        ]);\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Numbered\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Set {{numbered:true}} property on {{b.list.container}} to opt into numbered list group items. Numbers are generated via CSS for better placement inside list group items and to allow for better customization.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Numbers are generated by {{counter-reset}} on the {{h.ol}}, and then styled and placed with a {{/://:/before}} pseudo-element on the {{h.li}} with counter-increment and content.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ numbered: true }, [\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A list item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A list item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A list item\"),\n                        ]);\n                    },\n                }),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"These work great with custom content as well.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ numbered: true }, [1, 2, 3].map((_i) => {\n                            return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item({\n                                display: \"flex\",\n                                justifyContent: \"between\",\n                                alignItem: \"start\",\n                            }, [\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ marginStart: 2, marginEnd: \"auto\" }, [\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ fontWeight: \"bold\" }, \"Subheading\"),\n                                    \"Content for list item\",\n                                ]),\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.badge({ bgColor: \"primary\", rounded: \"pill\" }, \"14\"),\n                            ]);\n                        }));\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Horizontal\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Add {{horizontal:true}} to change the layout of list group items from vertical to horizontal across all breakpoints. Alternatively, choose a responsive variant {{horizontal:'{sm|md|lg|xl|xxl}'}} to make a list group horizontal starting at that breakpointâ€™s {{min-width}}. Currently {{b::horizontal list groups cannot be combined with flush list groups}}.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    showViewport: true,\n                    outputAttr: { display: \"grid\", gap: 3 },\n                    output: () => {\n                        let items = [\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"An item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A second item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item(\"A third item\"),\n                        ];\n                        return [\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ horizontal: true }, items),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ horizontal: \"sm\" }, items),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ horizontal: \"md\" }, items),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ horizontal: \"lg\" }, items),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ horizontal: \"xl\" }, items),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ horizontal: \"xxl\" }, items),\n                            ,\n                        ];\n                    },\n                }),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"{{b::ProTip:}} Want equal-width list group items when horizontal? Add {{flex:'fill'}} to each {{b.list.item}}.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    showViewport: true,\n                    outputAttr: { display: \"grid\", gap: 3 },\n                    output: () => {\n                        let items = [\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item({ flex: \"fill\" }, \"An item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item({ flex: \"fill\" }, \"A second item\"),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item({ flex: \"fill\" }, \"A third item\"),\n                        ];\n                        return [\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ horizontal: true }, items),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ horizontal: \"sm\" }, items),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ horizontal: \"md\" }, items),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ horizontal: \"lg\" }, items),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ horizontal: \"xl\" }, items),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container({ horizontal: \"xxl\" }, items),\n                            ,\n                        ];\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Variants\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.alert({ color: \"info\", callout: true }, \"{{b::Heads up!}} As of v5.3.0, the {{list-group-item-variant()}} Sass mixin is deprecated. List group item variants now have their CSS variables overridden in {{nav:docs/components/list#sass_loop::the Sass loop}}.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Use {{color:'<value>'}} property to style list items with a stateful background and color.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container([\n                            undefined,\n                            \"primary\",\n                            \"secondary\",\n                            \"success\",\n                            \"danger\",\n                            \"warning\",\n                            \"info\",\n                            \"light\",\n                            \"dark\",\n                        ].map((i) => {\n                            return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item({ color: i }, `A simple ${i ? i : \"default\"} list group item`);\n                        }));\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"For links and buttons\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"The {{color:'<value>'}} property also work with {{action:true}} for {{new b.tabList.item}} component. Note the addition of the hover styles here not present in the previous example. Also supported is the {{active:true}} state; apply it to indicate an active selection on a contextual list group item.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.container([\n                            undefined,\n                            \"primary\",\n                            \"secondary\",\n                            \"success\",\n                            \"danger\",\n                            \"warning\",\n                            \"info\",\n                            \"light\",\n                            \"dark\",\n                        ].map((i) => {\n                            return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({\n                                href: \"#\",\n                                action: true,\n                                color: i,\n                            }, `A simple ${i ? i : \"default\"} list group item`);\n                        }));\n                    },\n                }),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.alert({ color: \"info\", callout: true }, \"{{b::Accessibility tip:}} Using color to add meaning only provides a visual indication, which will not be conveyed to users of assistive technologies like screen readers. Please ensure the meaning is obvious from the content itself (e.g., the visible text) or is included through alternative means, such as additional text hidden with the {{visually:'hidden'}} property.\"),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"With badges\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Add badges to any list group item to show unread counts, activity, and more with the help of some {{nav:docs/utilities/flex::utilities}}.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container([\n                            { label: \"A list item\", counter: 14 },\n                            { label: \"A second list item\", counter: 2 },\n                            { label: \"A third list item\", counter: 1 },\n                        ].map((i) => {\n                            return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item({\n                                display: \"flex\",\n                                justifyContent: \"between\",\n                                alignItem: \"center\",\n                            }, [\n                                i.label,\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.badge({ bgColor: \"primary\", rounded: \"pill\" }, i.counter.toString()),\n                            ]);\n                        }));\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Custom content\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Add nearly any component within, even for linked list groups like the one below, with the help of {{nav:docs/utilities/flex::flexbox utilities}}.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.container({ style: { maxWidth: \"400px\" } }, [\n                            { label: \"And some small print\", active: true },\n                            { label: \"And some muted small print\" },\n                            { label: \"And some muted small print\" },\n                        ].map((i) => {\n                            return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({ href: \"#\", action: true, active: i.active }, [\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\n                                    display: \"flex\",\n                                    width: 100,\n                                    justifyContent: \"between\",\n                                }, [\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.h5({ marginBottom: 1 }, \"List group item heading\"),\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.small({\n                                        textColor: !i.active\n                                            ? \"body-secondary\"\n                                            : undefined,\n                                    }, \"3 days ago\"),\n                                ]),\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.p({ marginBottom: 1 }, \"Some placeholder content in a paragraph.\"),\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.small({ textColor: !i.active ? \"body-secondary\" : undefined }, i.label),\n                            ]);\n                        }));\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Checkboxes and radios\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Place Bootstrapâ€™s checkboxes and radios within list group items and customize as needed. You can use them without {{b.label}}s, but please remember to include an {{label}} property and value for accessibility.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container([\"first\", \"second\", \"third\"].map((i) => {\n                            return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item([\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.input({\n                                    type: \"checkbox\",\n                                    id: `${i}Checkbox`,\n                                    marginEnd: 2,\n                                }),\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.label({ for: `${i}Checkbox`, class: \"form-check-label\" }, `${_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i)} checkbox`),\n                            ]);\n                        }));\n                    },\n                }),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container([\"first\", \"second\", \"third\"].map((i) => {\n                            return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item([\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.input({\n                                    type: \"radio\",\n                                    id: `${i}Radio`,\n                                    name: \"listGroupRadio\",\n                                    marginEnd: 2,\n                                }),\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.label({ for: `${i}Radio`, class: \"form-check-label\" }, `${_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i)} radio`),\n                            ]);\n                        }));\n                    },\n                }),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"You can use {{stretched:true}} property on {{b.label}}s to make the whole {{b.list.item}} clickable.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { class: \"list-group-w-400px\" },\n                    output: () => {\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.container([\"first\", \"second\", \"third\"].map((i) => {\n                            return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.list.item([\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.input({\n                                    type: \"checkbox\",\n                                    id: `${i}CheckboxStretched`,\n                                    marginEnd: 2,\n                                }),\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.label({\n                                    for: `${i}CheckboxStretched`,\n                                    class: \"form-check-label\",\n                                    stretched: true,\n                                }, `${_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i)} checkbox`),\n                            ]);\n                        }));\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"CSS\")]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Variables\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"As part of Bootstrapâ€™s evolving CSS variables approach, list groups now use local CSS variables on {{.list-group}} for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.codepreview({\n                    type: \"css\",\n                    title: \"scss/_list-group.scss\",\n                    source: \"https://github.com/twbs/bootstrap/blob/v5.3.0/scss/_list-group.scss\",\n                    code: `\r\n\t\t\t\t\t\t--#{$prefix}list-group-color: #{$list-group-color};\r\n\t\t\t\t\t\t--#{$prefix}list-group-bg: #{$list-group-bg};\r\n\t\t\t\t\t\t--#{$prefix}list-group-border-color: #{$list-group-border-color};\r\n\t\t\t\t\t\t--#{$prefix}list-group-border-width: #{$list-group-border-width};\r\n\t\t\t\t\t\t--#{$prefix}list-group-border-radius: #{$list-group-border-radius};\r\n\t\t\t\t\t\t--#{$prefix}list-group-item-padding-x: #{$list-group-item-padding-x};\r\n\t\t\t\t\t\t--#{$prefix}list-group-item-padding-y: #{$list-group-item-padding-y};\r\n\t\t\t\t\t\t--#{$prefix}list-group-action-color: #{$list-group-action-color};\r\n\t\t\t\t\t\t--#{$prefix}list-group-action-hover-color: #{$list-group-action-hover-color};\r\n\t\t\t\t\t\t--#{$prefix}list-group-action-hover-bg: #{$list-group-hover-bg};\r\n\t\t\t\t\t\t--#{$prefix}list-group-action-active-color: #{$list-group-action-active-color};\r\n\t\t\t\t\t\t--#{$prefix}list-group-action-active-bg: #{$list-group-action-active-bg};\r\n\t\t\t\t\t\t--#{$prefix}list-group-disabled-color: #{$list-group-disabled-color};\r\n\t\t\t\t\t\t--#{$prefix}list-group-disabled-bg: #{$list-group-disabled-bg};\r\n\t\t\t\t\t\t--#{$prefix}list-group-active-color: #{$list-group-active-color};\r\n\t\t\t\t\t\t--#{$prefix}list-group-active-bg: #{$list-group-active-bg};\r\n\t\t\t\t\t\t--#{$prefix}list-group-active-border-color: #{$list-group-active-border-color};\r\n\t\t\t\t\t`,\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Sass variables\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.codepreview({\n                    type: \"css\",\n                    title: \"scss/_variables.scss\",\n                    source: \"https://github.com/twbs/bootstrap/blob/v5.3.0/scss/_variables.scss\",\n                    code: `\r\n\t\t\t\t\t\t$list-group-color:                  var(--#{$prefix}body-color);\r\n\t\t\t\t\t\t$list-group-bg:                     var(--#{$prefix}body-bg);\r\n\t\t\t\t\t\t$list-group-border-color:           var(--#{$prefix}border-color);\r\n\t\t\t\t\t\t$list-group-border-width:           var(--#{$prefix}border-width);\r\n\t\t\t\t\t\t$list-group-border-radius:          var(--#{$prefix}border-radius);\r\n\r\n\t\t\t\t\t\t$list-group-item-padding-y:         $spacer * .5;\r\n\t\t\t\t\t\t$list-group-item-padding-x:         $spacer;\r\n\t\t\t\t\t\t// fusv-disable\r\n\t\t\t\t\t\t$list-group-item-bg-scale:          -80%; // Deprecated in v5.3.0\r\n\t\t\t\t\t\t$list-group-item-color-scale:       40%; // Deprecated in v5.3.0\r\n\t\t\t\t\t\t// fusv-enable\r\n\r\n\t\t\t\t\t\t$list-group-hover-bg:               var(--#{$prefix}tertiary-bg);\r\n\t\t\t\t\t\t$list-group-active-color:           $component-active-color;\r\n\t\t\t\t\t\t$list-group-active-bg:              $component-active-bg;\r\n\t\t\t\t\t\t$list-group-active-border-color:    $list-group-active-bg;\r\n\r\n\t\t\t\t\t\t$list-group-disabled-color:         var(--#{$prefix}secondary-color);\r\n\t\t\t\t\t\t$list-group-disabled-bg:            $list-group-bg;\r\n\r\n\t\t\t\t\t\t$list-group-action-color:           var(--#{$prefix}secondary-color);\r\n\t\t\t\t\t\t$list-group-action-hover-color:     var(--#{$prefix}emphasis-color);\r\n\r\n\t\t\t\t\t\t$list-group-action-active-color:    var(--#{$prefix}body-color);\r\n\t\t\t\t\t\t$list-group-action-active-bg:       var(--#{$prefix}secondary-bg);\r\n\t\t\t\t\t`,\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Sass loop\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Loop that generates the modifier classes with an overriding of CSS variables.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.codepreview({\n                    type: \"css\",\n                    title: \"scss/_list-group.scss\",\n                    source: \"https://github.com/twbs/bootstrap/blob/v5.3.0/scss/_list-group.scss\",\n                    code: `\r\n\t\t\t\t\t\t// List group contextual variants\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\t// Add modifier classes to change text and background color on individual items.\r\n\t\t\t\t\t\t// Organizationally, this must come after the \":hover\" states.\r\n\r\n\t\t\t\t\t\t@each $state in map-keys($theme-colors) {\r\n\t\t\t\t\t\t\t.list-group-item-#{$state} {\r\n\t\t\t\t\t\t\t\t--#{$prefix}list-group-color: var(--#{$prefix}#{$state}-text-emphasis);\r\n\t\t\t\t\t\t\t\t--#{$prefix}list-group-bg: var(--#{$prefix}#{$state}-bg-subtle);\r\n\t\t\t\t\t\t\t\t--#{$prefix}list-group-border-color: var(--#{$prefix}#{$state}-border-subtle);\r\n\t\t\t\t\t\t\t\t--#{$prefix}list-group-action-hover-color: var(--#{$prefix}emphasis-color);\r\n\t\t\t\t\t\t\t\t--#{$prefix}list-group-action-hover-bg: var(--#{$prefix}#{$state}-border-subtle);\r\n\t\t\t\t\t\t\t\t--#{$prefix}list-group-action-active-color: var(--#{$prefix}emphasis-color);\r\n\t\t\t\t\t\t\t\t--#{$prefix}list-group-action-active-bg: var(--#{$prefix}#{$state}-border-subtle);\r\n\t\t\t\t\t\t\t\t--#{$prefix}list-group-active-color: var(--#{$prefix}#{$state}-bg-subtle);\r\n\t\t\t\t\t\t\t\t--#{$prefix}list-group-active-bg: var(--#{$prefix}#{$state}-text-emphasis);\r\n\t\t\t\t\t\t\t\t--#{$prefix}list-group-active-border-color: var(--#{$prefix}#{$state}-text-emphasis);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t`,\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Tab behavior\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Use the tab JavaScript pluginâ€”include it individually or through the compiled {{bootstrap.js}} fileâ€”to extend Bootstrap list group to create tabbable panes of local content.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    output: () => {\n                        const data = [\"home\", \"profile\", \"messages\", \"settings\"];\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ row: true }, [\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [5, \"md-4\"] }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.container({ id: \"list-tab\" }, data.map((i, ix) => {\n                                return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({\n                                    active: ix === 0,\n                                    id: `list-${i}-list`,\n                                    controlfor: `list-${i}`,\n                                    href: `#list-${i}`,\n                                    autoInit: true,\n                                }, _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i));\n                            }))),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [7, \"md-8\"] }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.tab.content({ id: \"nav-tabContent\" }, data.map((i, ix) => {\n                                return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.tab.pane({\n                                    active: ix === 0,\n                                    id: `list-${i}`,\n                                    labelledby: `#list-${i}-list`,\n                                }, `Some placeholder content in a paragraph relating to \"${_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i)}\". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.`);\n                            }))),\n                        ]);\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Using {{autoInit}} property\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"You can activate a list group navigation automaticly by simply specifying {{autoInit:true}} on {{b.tabList.item}}. Make sure you provide {{href}} property that point to {{b.tabList.tab.pane}} {{id}}\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    output: () => {\n                        const data = [\"home\", \"profile\", \"messages\", \"settings\"];\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ row: true }, [\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [5, \"md-4\"] }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.container({ id: \"list-useprop-tab\" }, data.map((i, ix) => {\n                                return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({\n                                    active: ix === 0,\n                                    id: `list-useprop-${i}-list`,\n                                    controlfor: `list-useprop-${i}`,\n                                    href: `#list-useprop-${i}`,\n                                    autoInit: true, //auto init tab item\n                                }, _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i));\n                            }))),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [7, \"md-8\"] }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.tab.content({ id: \"nav-useprop-tabContent\" }, data.map((i, ix) => {\n                                return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.tab.pane({\n                                    active: ix === 0,\n                                    id: `list-useprop-${i}`,\n                                    labelledby: `#list-useprop-${i}-list`,\n                                }, `Some placeholder content in a paragraph relating to \"${_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i)}\". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.`);\n                            }))),\n                        ]);\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Manual init\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Enable tabbable list item via JavaScript (each list item needs to be activated individually):\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.alert({ callout: true, color: \"warning\" }, \"By manually addEventListener, make sure you remove the event listernet on element remove to prevent memory leak.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { display: \"flex\", flex: \"wrap\", gap: 2 },\n                    output: () => {\n                        const btnAttach = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\n                            textWrap: false,\n                            on: {\n                                click: (e) => {\n                                    var _a;\n                                    const target = e.target;\n                                    const elem = document.querySelectorAll(\"#list-manual-tab a\");\n                                    elem.forEach((i) => {\n                                        const tabTrigger = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.init(i);\n                                        i.addEventListener(\"click\", (event) => {\n                                            event.preventDefault();\n                                            tabTrigger.show();\n                                        });\n                                    });\n                                    _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.show(_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.create({\n                                        title: document.title,\n                                        color: \"success\",\n                                        elem: \"Tab trigger attached\",\n                                    }));\n                                    (_a = target.closest(\".row\")) === null || _a === void 0 ? void 0 : _a.remove();\n                                },\n                            },\n                        }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.caption({ icon: \"paperclip\" }, \"Attach tab\"));\n                        const data = [\"home\", \"profile\", \"messages\", \"settings\"];\n                        return [\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ row: true }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [5, \"md-4\"], display: \"grid\" }, btnAttach)),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ row: true }, [\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [5, \"md-4\"] }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.container({ id: \"list-manual-tab\" }, data.map((i, ix) => {\n                                    return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({\n                                        active: ix === 0,\n                                        id: `list-manual-${i}-list`,\n                                        controlfor: `list-manual-${i}`,\n                                        href: `#list-manual-${i}`,\n                                    }, _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i));\n                                }))),\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [7, \"md-8\"] }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.tab.content({ id: \"nav-manual-tabContent\" }, data.map((i, ix) => {\n                                    return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.tab.pane({\n                                        active: ix === 0,\n                                        id: `list-manual-${i}`,\n                                        labelledby: `#list-manual-${i}-list`,\n                                    }, `Some placeholder content in a paragraph relating to \"${_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i)}\". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.`);\n                                }))),\n                            ]),\n                        ];\n                    },\n                }),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"You can activate individual list item in several ways:\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.alert({ callout: true, color: \"success\" }, \"{{bsts}} automaticly {{removeEventListener}} for event that create using {{on}} property to prevent memory leak.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { display: \"flex\", flex: \"wrap\", gap: 2 },\n                    output: () => {\n                        const data = [\"home\", \"profile\", \"messages\", \"settings\"];\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ row: true }, [\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [5, \"md-4\"] }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.container({ id: \"list-direct-tab\" }, data.map((i, ix) => {\n                                return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({\n                                    active: ix === 0,\n                                    id: `list-direct-${i}-list`,\n                                    controlfor: `list-direct-${i}`,\n                                    href: `#list-direct-${i}`,\n                                    on: {\n                                        click: (e) => {\n                                            e.preventDefault();\n                                            const target = e.target;\n                                            _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.show(target); //direct init and show the tab\n                                        },\n                                    },\n                                }, _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i));\n                            }))),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [7, \"md-8\"] }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.tab.content({ id: \"nav-direct-tabContent\" }, data.map((i, ix) => {\n                                return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.tab.pane({\n                                    active: ix === 0,\n                                    id: `list-direct-${i}`,\n                                    labelledby: `#list-direct-${i}-list`,\n                                }, `Some placeholder content in a paragraph relating to \"${_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i)}\". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.`);\n                            }))),\n                        ]);\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Fade effect\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"By default, {{bsts}} add {{.fade}} class automaticly into {{b.tabList.tab.pane}} component. You can disable it by set {{animation:false}} to each {{b.tabList.tab.pane}}\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    output: () => {\n                        const data = [\"home\", \"profile\", \"messages\", \"settings\"];\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ row: true }, [\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [5, \"md-4\"] }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.container({ id: \"list-noanimate-tab\" }, data.map((i, ix) => {\n                                return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({\n                                    active: ix === 0,\n                                    id: `list-noanimate-${i}-list`,\n                                    controlfor: `list-noanimate-${i}`,\n                                    href: `#list-noanimate-${i}`,\n                                    autoInit: true,\n                                }, _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i));\n                            }))),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [7, \"md-8\"] }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.tab.content({ id: \"nav-noanimate-tabContent\" }, data.map((i, ix) => {\n                                return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.tab.pane({\n                                    active: ix === 0,\n                                    id: `list-noanimate-${i}`,\n                                    labelledby: `#list-noanimate-${i}-list`,\n                                    animation: false, //disable tab pane animation\n                                }, `Some placeholder content in a paragraph relating to \"${_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i)}\". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.`);\n                            }))),\n                        ]);\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Methods\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.alert({ color: \"danger\", callout: true }, \"{{b::All API methods are asynchronous and start a transition}}. They return to the caller as soon as the transition is started, but before it ends. In addition, a method call on a transitioning component will be ignored. {{https://getbootstrap.com/docs/5.3/getting-started/javascript/#asynchronous-functions-and-transitions::Learn more in Bootstrap JavaScript docs}}.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Activates your content as a tab element.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"You can create a tab instance with the constructor, for example:\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.codepreview({\n                    type: \"js\",\n                    code: `\r\n\t\t\t\t\t\tconst bsTab = new bootstrap.Tab('#myTab')\r\n\t\t\t\t\t`,\n                }),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.table({\n                    item: [\n                        [\"Method\", \"Description\"],\n                        [\"{{dispose}}\", \"Destroys an elementâ€™s tab.\"],\n                        [\n                            \"{{getInstance}}\",\n                            \"Static method which allows you to get the tab instance associated with a DOM element, you can use it like this: {{bootstrap.Tab.getInstance(element)}}.\",\n                        ],\n                        [\n                            \"{{getOrCreateInstance}}\",\n                            \"Static method which returns a tab instance associated to a DOM element or create a new one in case it wasnâ€™t initialized. You can use it like this: {{bootstrap.Tab.getOrCreateInstance(element)}}.\",\n                        ],\n                        [\n                            \"{{show}}\",\n                            \"Selects the given tab and shows its associated pane. Any other tab that was previously selected becomes unselected and its associated pane is hidden. {{b::Returns to the caller before the tab pane has actually been shown}} (i.e. before the {{shown.bs.tab}} event occurs).\",\n                        ],\n                    ],\n                }),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    outputAttr: { position: \"relative\" },\n                    showConsole: true,\n                    output: () => {\n                        const data = [\"home\", \"profile\", \"messages\", \"settings\"];\n                        const clickTabEvent = (event) => {\n                            event.preventDefault();\n                            const target = event.target;\n                            _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.show(target);\n                        };\n                        const tabContainer = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ row: true }, [\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [5, \"md-4\"] }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.container({ id: \"list-method-tab\" }, data.map((i, ix) => {\n                                return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({\n                                    active: ix === 0,\n                                    id: `list-method-${i}-list`,\n                                    controlfor: `list-method-${i}`,\n                                    href: `#list-method-${i}`,\n                                }, _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i));\n                            }))),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [7, \"md-8\"] }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.tab.content({ id: \"nav-method-tabContent\" }, data.map((i, ix) => {\n                                return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.tab.pane({\n                                    active: ix === 0,\n                                    id: `list-method-${i}`,\n                                    labelledby: `#list-method-${i}-list`,\n                                }, `Some placeholder content in a paragraph relating to \"${_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i)}\". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.`);\n                            }))),\n                        ]);\n                        const initButton = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\n                            color: \"success\",\n                            on: {\n                                click: (event) => {\n                                    const elem = document.querySelectorAll(\"#list-method-tab a\");\n                                    elem.forEach((i) => {\n                                        i.addEventListener(\"click\", clickTabEvent);\n                                    });\n                                    _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.console(event.target, \"b.tabList.init\", elem ? elem : \"null\", elem ? \"success\" : \"danger\");\n                                },\n                            },\n                        }, \"init\");\n                        const getInstanceButton = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\n                            color: \"success\",\n                            on: {\n                                click: (event) => {\n                                    const elem = document.querySelectorAll(\"#list-method-tab a\");\n                                    let elemInstance = [];\n                                    elem.forEach((i) => {\n                                        elemInstance.push(_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.getInstance(i));\n                                    });\n                                    _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.console(event.target, \"b.tabList.getInstance\", elemInstance && elemInstance.length > 0\n                                        ? elemInstance\n                                        : \"null\", elemInstance && elemInstance.length > 0\n                                        ? \"success\"\n                                        : \"danger\");\n                                },\n                            },\n                        }, \"getInstance\");\n                        const getOrCreateInstanceButton = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\n                            color: \"success\",\n                            on: {\n                                click: (event) => {\n                                    const elem = document.querySelectorAll(\"#list-method-tab a\");\n                                    let elemInstance = [];\n                                    elem.forEach((i) => {\n                                        elemInstance.push(_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.getOrCreateInstance(i));\n                                    });\n                                    _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.console(event.target, \"b.tabList.getOrCreateInstance\", elemInstance && elemInstance.length > 0\n                                        ? elemInstance\n                                        : \"null\", elemInstance && elemInstance.length > 0\n                                        ? \"success\"\n                                        : \"danger\");\n                                },\n                            },\n                        }, \"getOrCreateInstance\");\n                        const showButton = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\n                            on: {\n                                click: (event) => {\n                                    const elem = document.querySelectorAll(\"#list-method-tab a\");\n                                    if (elem) {\n                                        let i = elem[_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.rndBetween(0, elem.length - 1)];\n                                        if (i) {\n                                            _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.show(i);\n                                            _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.console(event.target, \"b.tabList.show\", i ? i : \"null\", i ? \"success\" : \"danger\");\n                                        }\n                                    }\n                                },\n                            },\n                        }, \"show (random)\");\n                        const disposeButton = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\n                            color: \"danger\",\n                            on: {\n                                click: (event) => {\n                                    const elem = document.querySelectorAll(\"#list-method-tab a\");\n                                    elem.forEach((i) => {\n                                        _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.dispose(i);\n                                        i.removeEventListener(\"click\", clickTabEvent);\n                                    });\n                                    _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.console(event.target, \"b.tabList.dispose\", elem && elem.length > 0 ? elem : \"null\", elem && elem.length > 0 ? \"success\" : \"danger\");\n                                },\n                            },\n                        }, \"dispose\");\n                        const buttonGroup = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.btngroup({ vertical: true, weight: \"sm\" }, [\n                            initButton,\n                            getInstanceButton,\n                            getOrCreateInstanceButton,\n                            showButton,\n                            disposeButton,\n                        ]);\n                        const previewContainer = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\n                            width: 100,\n                            marginEnd: 3,\n                            bgColor: \"body-tertiary\",\n                            rounded: true,\n                            padding: 2,\n                        }, tabContainer);\n                        const controlContainer = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\n                            marginStart: \"auto\",\n                        }, buttonGroup);\n                        const mainContainer = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ display: \"flex\" }, [\n                            previewContainer,\n                            controlContainer,\n                        ]);\n                        return [mainContainer];\n                    },\n                }),\n            ]),\n            //----------------------\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Events\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"When showing a new tab, the events fire in the following order:\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.ol({\n                    item: [\n                        \"{{hide.bs.tab}} (on the current active tab)\",\n                        \"{{show.bs.tab}} (on the to-be-shown tab)\",\n                        \"{{hidden.bs.tab}} (on the previous active tab, the same one as for the {{hide.bs.tab}} event)\",\n                        \"{{shown.bs.tab}} (on the newly-active just-shown tab, the same one as for the {{show.bs.tab}} event)\",\n                    ],\n                }),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"If no tab was already active, then the {{hide.bs.tab}} and {{hidden.bs.tab}} events will not be fired.\"),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.table({\n                    item: [\n                        [\"Event type\", \"Description\"],\n                        [\n                            \"{{hide.bs.tab}}\",\n                            \"This event fires when a new tab is to be shown (and thus the previous active tab is to be hidden). Use {{event.target}} and {{event.relatedTarget}} to target the current active tab and the new soon-to-be-active tab, respectively.\",\n                        ],\n                        [\n                            \"{{hidden.bs.tab}}\",\n                            \"This event fires after a new tab is shown (and thus the previous active tab is hidden). Use {{event.target}} and {{event.relatedTarget}} to target the previous active tab and the new active tab, respectively.\",\n                        ],\n                        [\n                            \"{{show.bs.tab}}\",\n                            \"This event fires on tab show, but before the new tab has been shown. Use {{event.target}} and {{event.relatedTarget}} to target the active tab and the previous active tab (if available) respectively.\",\n                        ],\n                        [\n                            \"{{shown.bs.tab}}\",\n                            \"This event fires on tab show after a tab has been shown. Use {{event.target}} and {{event.relatedTarget}} to target the active tab and the previous active tab (if available) respectively.\",\n                        ],\n                    ],\n                }),\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\n                    db: (0,_ctl_main_content_js__WEBPACK_IMPORTED_MODULE_2__.getContentCode)(db),\n                    showConsole: true,\n                    output: () => {\n                        const data = [\"home\", \"profile\", \"messages\", \"settings\"];\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ row: true }, [\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [5, \"md-4\"] }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.container({ id: \"list-event-tab\" }, data.map((i, ix) => {\n                                return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.item({\n                                    active: ix === 0,\n                                    id: `list-event-${i}-list`,\n                                    controlfor: `list-event-${i}`,\n                                    href: `#list-event-${i}`,\n                                    autoInit: true,\n                                    on: {\n                                        \"shown.bs.tab\": (event) => {\n                                            const evnt = event;\n                                            _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.console(evnt.target, \"shown.bs.tab\", `target: {{b::${evnt.target}}}{{br}}relatedTarget: {{b::${evnt.relatedTarget}}}`, \"info\");\n                                        },\n                                    },\n                                }, _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i));\n                            }))),\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: [7, \"md-8\"] }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.tab.content({ id: \"nav-event-tabContent\" }, data.map((i, ix) => {\n                                return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.tabList.tab.pane({\n                                    active: ix === 0,\n                                    id: `list-event-${i}`,\n                                    labelledby: `#list-event-${i}-list`,\n                                    animation: false,\n                                }, `Some placeholder content in a paragraph relating to \"${_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.uppercaseFirst(i)}\". And some more content, used here just to pad out and fill this tab panel. In production, you would obviously have more real content here. And not just text. It could be anything, really. Text, images, forms.`);\n                            }))),\n                        ]);\n                    },\n                }),\n            ]),\n        ];\n    },\n};\n\n\n//# sourceURL=webpack://bsts-test/./src/docs/components/list.ts?");

/***/ })

}]);