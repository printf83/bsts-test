"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_printf83_bsts_test"] = self["webpackChunk_printf83_bsts_test"] || []).push([["build_docs_components_toast_js"],{

/***/ "./build/docs/components/toast.js":
/*!****************************************!*\
  !*** ./build/docs/components/toast.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toast: () => (/* binding */ toast)\n/* harmony export */ });\n/* harmony import */ var _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @printf83/bsts */ \"./node_modules/@printf83/bsts/build/esm/index.js\");\n/* harmony import */ var _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../ctl/example/_index.js */ \"./build/ctl/example/_index.js\");\n\r\n\r\nconst toast = {\r\n    title: \"Toasts\",\r\n    description: \"Push notifications to your visitors with a toast, a lightweight and easily customizable alert message.\",\r\n    item: () => {\r\n        return [\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Toasts are lightweight notifications designed to mimic the push notifications that have been popularized by mobile and desktop operating systems. They’re built with flexbox, so they’re easy to align and position.\"),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Overview\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Things to know when using the toast plugin:\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.ul({\r\n                    item: [\r\n                        \"Toasts are opt-in for performance reasons, so {{b:you must initialize them yourself}}.\",\r\n                        \"Toasts will automatically hide if you do not specify {{autohide: false}}.\",\r\n                        \"{{bsts}} automaticly initialize toast on {{build}}.\",\r\n                    ],\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.alert({ color: \"info\", callout: true }, \"The animation effect of this component is dependent on the {{prefers-reduced-motion}} media query. See the {{https://getbootstrap.com/docs/5.3/getting-started/accessibility/#reduced-motion::reduced motion section of Bootstrap accessibility documentation}}.\"),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Examples\")]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Basic\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"To encourage extensible and predictable toasts, Bootstrap recommend a header and body. Toast headers use {{display:'flex'}}, allowing easy alignment of content thanks to Bootstrap margin and flexbox utilities.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Toasts are as flexible as you need and have very little required markup. At a minimum, Bootstrap require a single element to contain your “toasted” content and strongly encourage a dismiss button.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    showCodepen: false,\r\n                    output: () => {\r\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({ debug: true, live: \"assertive\", atomic: true }, [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.header([\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                    bgColor: \"primary\",\r\n                                    rounded: true,\r\n                                    marginEnd: 2,\r\n                                    style: { width: \"20px\", height: \"20px\" },\r\n                                }),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.strong({ marginEnd: \"auto\" }, \"Bootstrap\"),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.small(\"11 mins ago\"),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.btnclose(),\r\n                            ]),\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body(\"Hello, world! This is a toast message.\"),\r\n                        ]);\r\n                    },\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.alert({ color: \"warning\", callout: true }, \"Previously, Bootstrap scripts dynamically added the {{.hide}} class to completely hide a toast (with {{display:none}}, rather than just with {{opacity:0}}). This is now not necessary anymore. However, for backwards compatibility, Bootstrap script will continue to toggle the class (even though there is no practical need for it) until the next major version.\"),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Live example\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Click the button below to show a toast (positioned with Bootstrap utilities in the lower right corner) that has been hidden by default.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    output: () => {\r\n                        return [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                                id: \"liveToastBtn\",\r\n                                on: {\r\n                                    click: (_e) => {\r\n                                        //trigger live toast demo\r\n                                        const toastLiveExample = document.getElementById(\"liveToast\");\r\n                                        const toastBootstrap = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.getOrCreateInstance(toastLiveExample);\r\n                                        toastBootstrap.show();\r\n                                    },\r\n                                },\r\n                            }, \"Show live toast\"),\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.container({ placement: \"bottom-end\" }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({ id: \"liveToast\", live: \"assertive\", atomic: true }, [\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.header([\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                        bgColor: \"primary\",\r\n                                        rounded: true,\r\n                                        marginEnd: 2,\r\n                                        style: { width: \"20px\", height: \"20px\" },\r\n                                    }),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.strong({ marginEnd: \"auto\" }, \"Bootstrap\"),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.small(\"11 mins ago\"),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.btnclose(),\r\n                                ]),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body(\"Hello, world! This is a toast message.\"),\r\n                            ])),\r\n                        ];\r\n                    },\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Toast show\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"You also can use Bootstrap {{b.toast.show}} function to show the toast. This toast will be regenerated every time you call it and get will be destroy automaticly on {{hidden.bs.toast}}.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    output: () => {\r\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                            on: {\r\n                                click: (_e) => {\r\n                                    const tItem = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({ live: \"assertive\", atomic: true }, [\r\n                                        new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.header([\r\n                                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                                bgColor: \"primary\",\r\n                                                rounded: true,\r\n                                                marginEnd: 2,\r\n                                                style: { width: \"20px\", height: \"20px\" },\r\n                                            }),\r\n                                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.strong({ marginEnd: \"auto\" }, \"Bootstrap\"),\r\n                                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.timer(),\r\n                                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.btnclose(),\r\n                                        ]),\r\n                                        new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body(\"Hello, world! This is a toast message.\"),\r\n                                    ]);\r\n                                    //show the above toast on the top-end\r\n                                    _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.show(tItem, \"top-end\");\r\n                                },\r\n                            },\r\n                        }, \"Show live toast\");\r\n                    },\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Simple toast\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"You can use Bootstrap simple toast by calling {{b.toast.create}} function.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.table({\r\n                    item: [\r\n                        [\"Option\", \"Type\", \"Default\", \"Description\"],\r\n                        [\"{{elem}}\", \"{{IElem}}\", \"*required\", \"Toast main element / message\"],\r\n                        [\r\n                            \"{{title}}\",\r\n                            \"{{IElem}}\",\r\n                            \"{{undefined}}\",\r\n                            \"Set toast title. If set, btnclosewhite value is not effected the close button.\",\r\n                        ],\r\n                        [\"{{atomic}}\", \"{{boolean}}\", \"{{true}}\", \"Set {{aria-atomic}} value\"],\r\n                        [\"{{live}}\", \"{{assertive}} | {{polite}}\", \"{{assertive}}\", \"Set {{aria-live}} value\"],\r\n                        [\r\n                            \"{{color}}\",\r\n                            \"{{primary}} | {{secondary}} | {{success}} | {{info}} | {{warning}} | {{danger}} | {{dark}} | {{light}} | {{undefined}}\",\r\n                            \"{{undefined}}\",\r\n                            \"Toast main element / message\",\r\n                        ],\r\n                        [\r\n                            \"{{btnclosewhite}}\",\r\n                            \"{{boolean}} | {{undefined}}\",\r\n                            \"{{undefined}}\",\r\n                            \"Manually set close button white. If not, automaticly set base on {{color}}\",\r\n                        ],\r\n                        [\r\n                            \"{{delay}}\",\r\n                            \"{{number}} | {{undefined}}\",\r\n                            \"{{5000}}\",\r\n                            \"Set toast timeout delay in milisecond\",\r\n                        ],\r\n                        [\"{{animation}}\", \"{{boolean}} | {{undefined}}\", \"{{true}}\", \"Set toast animation.\"],\r\n                    ],\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    outputAttr: { display: \"flex\", flex: \"wrap\", gap: 2 },\r\n                    output: () => {\r\n                        const fnToast = (color, elem, icon) => {\r\n                            let tElem;\r\n                            switch (color) {\r\n                                case \"danger\":\r\n                                    tElem = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.caption({\r\n                                        icon: _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.icon.bi(icon || \"x-circle-fill\", {\r\n                                            fontSize: 5,\r\n                                        }),\r\n                                        elem: elem,\r\n                                    });\r\n                                    break;\r\n                                case \"dark\":\r\n                                    tElem = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.caption({\r\n                                        icon: _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.icon.bi(icon || \"info-circle-fill\", {\r\n                                            fontSize: 5,\r\n                                        }),\r\n                                        elem: elem,\r\n                                    });\r\n                                    break;\r\n                                case \"info\":\r\n                                    tElem = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.caption({\r\n                                        icon: _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.icon.bi(icon || \"info-circle-fill\", {\r\n                                            fontSize: 5,\r\n                                        }),\r\n                                        elem: elem,\r\n                                    });\r\n                                    break;\r\n                                case \"light\":\r\n                                    tElem = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.caption({\r\n                                        icon: _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.icon.bi(icon || \"info-circle-fill\", {\r\n                                            fontSize: 5,\r\n                                        }),\r\n                                        elem: elem,\r\n                                    });\r\n                                    break;\r\n                                case \"primary\":\r\n                                    tElem = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.caption({\r\n                                        icon: _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.icon.bi(icon || \"info-circle-fill\", {\r\n                                            fontSize: 5,\r\n                                        }),\r\n                                        elem: elem,\r\n                                    });\r\n                                    break;\r\n                                case \"secondary\":\r\n                                    tElem = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.caption({\r\n                                        icon: _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.icon.bi(icon || \"info-circle-fill\", {\r\n                                            fontSize: 5,\r\n                                        }),\r\n                                        elem: elem,\r\n                                    });\r\n                                    break;\r\n                                case \"success\":\r\n                                    tElem = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.caption({\r\n                                        icon: _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.icon.bi(icon || \"check-circle-fill\", {\r\n                                            fontSize: 5,\r\n                                        }),\r\n                                        elem: elem,\r\n                                    });\r\n                                    break;\r\n                                case \"warning\":\r\n                                    tElem = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.caption({\r\n                                        icon: _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.icon.bi(icon || \"exclamation-triangle-fill\", {\r\n                                            fontSize: 5,\r\n                                        }),\r\n                                        elem: elem,\r\n                                    });\r\n                                    break;\r\n                                default:\r\n                                    tElem = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.caption({\r\n                                        icon: _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.icon.bi(icon || \"info-circle-fill\", {\r\n                                            fontSize: 5,\r\n                                        }),\r\n                                        elem: elem,\r\n                                    });\r\n                            }\r\n                            _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.show(_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.create({\r\n                                color: color,\r\n                                elem: tElem,\r\n                                title: document.title,\r\n                            }));\r\n                        };\r\n                        return [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\", \"dark\"].map((i) => {\r\n                            return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                                color: i,\r\n                                on: {\r\n                                    click: (_e) => {\r\n                                        fnToast(i, `This is {{b::${i} }}toast.`);\r\n                                    },\r\n                                },\r\n                            }, `Show ${i} toast`);\r\n                        });\r\n                    },\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Translucent\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Toasts are slightly translucent to blend in with what’s below them.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    showCodepen: false,\r\n                    previewAttr: { bgColor: \"dark\" },\r\n                    output: () => {\r\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({ debug: true, live: \"assertive\", atomic: true }, [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.header([\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                    bgColor: \"primary\",\r\n                                    rounded: true,\r\n                                    marginEnd: 2,\r\n                                    style: { width: \"20px\", height: \"20px\" },\r\n                                }),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.strong({ marginEnd: \"auto\" }, \"Bootstrap\"),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.small(\"11 mins ago\"),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.btnclose(),\r\n                            ]),\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body(\"Hello, world! This is a toast message.\"),\r\n                        ]);\r\n                    },\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Stacking\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"You can stack toasts by wrapping them in a toast container, which will vertically add some spacing.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    showCodepen: false,\r\n                    output: () => {\r\n                        const item = (msg, timer) => {\r\n                            return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({ debug: true, live: \"assertive\", atomic: true }, [\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.header([\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                        bgColor: \"primary\",\r\n                                        rounded: true,\r\n                                        marginEnd: 2,\r\n                                        style: { width: \"20px\", height: \"20px\" },\r\n                                    }),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.strong({ marginEnd: \"auto\" }, \"Bootstrap\"),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.small(timer),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.btnclose(),\r\n                                ]),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body(msg),\r\n                            ]);\r\n                        };\r\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.container({ debug: true }, [\r\n                            item(\"See? just like this\", \"Just now\"),\r\n                            item(\"Heads up, toasts will stack automatically\", \"2 second ago\"),\r\n                        ]);\r\n                    },\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Custom content\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Customize your toasts by removing sub-components, tweaking them with {{nav:docs/utilities/api::utilities}}, or by adding your own markup. Here Bootstrap created a simpler toast by removing the default {{b.toast.header}}, adding a custom hide icon from {{https://icons.getbootstrap.com/::Bootstrap Icons}}, and using some {{nav:docs/utilities/flex::flexbox utilities}} to adjust the layout.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    showCodepen: false,\r\n                    output: () => {\r\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({ debug: true, alignItem: \"center\", live: \"assertive\", atomic: true }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ display: \"flex\" }, [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body(\"Hello, world! This is a toast message.\"),\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.btnclose({ marginEnd: 2, margin: \"auto\" }),\r\n                        ]));\r\n                    },\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Alternatively, you can also add additional controls and components to toasts.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    showCodepen: false,\r\n                    output: () => {\r\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({ debug: true, alignItem: \"center\", live: \"assertive\", atomic: true }, [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body([\r\n                                \"Hello, world! This is a toast message.\",\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ marginTop: 2, paddingTop: 2, border: \"top\", display: \"flex\", gap: 1 }, [\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({ weight: \"sm\" }, \"Take action\"),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({ weight: \"sm\", color: \"secondary\", dismiss: \"toast\" }, \"Close\"),\r\n                                ]),\r\n                            ]),\r\n                        ]);\r\n                    },\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Color schemes\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Building on the above example, you can create different toast color schemes with Bootstrap {{nav:docs/utilities/colors::color}} and {{nav:docs/utilities/background::background}} utilities. Here Bootstrap added {{textBgColor:'primary'}} to the {{b.toast.item}}, and then added {{b.toast.btnclose({white:true})}} to Bootstrap close button. For a crisp edge, Bootstrap remove the default border with {{border:false}}.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    showCodepen: false,\r\n                    output: () => {\r\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({\r\n                            debug: true,\r\n                            alignItem: \"center\",\r\n                            textBgColor: \"primary\",\r\n                            border: false,\r\n                            live: \"assertive\",\r\n                            atomic: true,\r\n                        }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ display: \"flex\" }, [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body(\"Hello, world! This is a toast message.\"),\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.btnclose({ white: true, marginEnd: 2, margin: \"auto\" }),\r\n                        ]));\r\n                    },\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Disable animation\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"{{bsts}} automaticly set {{animation:true}} on {{b.toast.item}}. Set {{animation:false}} to disable toast animation.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    output: () => {\r\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                            on: {\r\n                                click: () => {\r\n                                    _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.show(_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.create({\r\n                                        delay: 30000,\r\n                                        animation: false,\r\n                                        elem: \"Toast without animation\",\r\n                                        title: document.title,\r\n                                    }));\r\n                                },\r\n                            },\r\n                        }, \"Show live toast\");\r\n                    },\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Placement\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Place toasts with custom CSS as you need them. The top right is often used for notifications, as is the top middle. If you’re only ever going to show one toast at a time, put the positioning styles right on the .toast.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    showCodepen: false,\r\n                    output: () => {\r\n                        const container = (placement) => {\r\n                            return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.container({\r\n                                class: \"debug\",\r\n                                padding: 3,\r\n                                id: \"toastPlacement\",\r\n                                placement: placement,\r\n                                position: undefined,\r\n                            }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({ debug: true }, [\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.header([\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                        bgColor: \"primary\",\r\n                                        rounded: true,\r\n                                        marginEnd: 2,\r\n                                        style: { width: \"20px\", height: \"20px\" },\r\n                                    }),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.strong({ marginEnd: \"auto\" }, \"Bootstrap\"),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.small(\"11 mins ago\"),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.btnclose(),\r\n                                ]),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body(\"Hello, world! This is a toast message.\"),\r\n                            ]));\r\n                        };\r\n                        return [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.form([\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.label({ for: \"selectToastPlacement\" }, \"Toast placement\"),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.select({\r\n                                    marginTop: 2,\r\n                                    id: \"selectToastPlacement\",\r\n                                    item: [\r\n                                        { value: \"\", selected: true, elem: \"Select a position...\" },\r\n                                        { value: \"top-start\", elem: \"Top start\" },\r\n                                        { value: \"top-end\", elem: \"Top end\" },\r\n                                        { value: \"top-center\", elem: \"Top center\" },\r\n                                        { value: \"middle-start\", elem: \"Middle start\" },\r\n                                        { value: \"middle-end\", elem: \"Middle end\" },\r\n                                        { value: \"middle-center\", elem: \"Middle center\" },\r\n                                        { value: \"bottom-start\", elem: \"Bottom start\" },\r\n                                        { value: \"bottom-end\", elem: \"Bottom end\" },\r\n                                        { value: \"bottom-center\", elem: \"Bottom center\" },\r\n                                    ],\r\n                                    on: {\r\n                                        change: (e) => {\r\n                                            const target = e.target;\r\n                                            const value = target.value;\r\n                                            _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.replaceWith(document.getElementById(\"toastPlacement\"), container(value));\r\n                                        },\r\n                                    },\r\n                                }),\r\n                            ]),\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                position: \"relative\",\r\n                                rounded: 3,\r\n                                bgColor: \"body-secondary\",\r\n                                marginTop: 3,\r\n                                style: { minHeight: \"240px\", zIndex: \"0\" },\r\n                                aria: { live: \"polite\", atomic: \"true\" },\r\n                            }, container(\"top-start\")),\r\n                        ];\r\n                    },\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"For systems that generate more notifications, consider using a wrapping element so they can easily stack.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    showCodepen: false,\r\n                    output: () => {\r\n                        const item = (msg, timer) => {\r\n                            return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({ debug: true, live: \"assertive\", atomic: true }, [\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.header([\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                        bgColor: \"primary\",\r\n                                        rounded: true,\r\n                                        marginEnd: 2,\r\n                                        style: { width: \"20px\", height: \"20px\" },\r\n                                    }),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.strong({ marginEnd: \"auto\" }, \"Bootstrap\"),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.small(timer),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.btnclose(),\r\n                                ]),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body(msg),\r\n                            ]);\r\n                        };\r\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ aria: { live: \"polite\", atomic: \"true\" }, position: \"relative\" }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.container({ debug: true, placement: \"top-end\" }, [\r\n                            item(\"See? just like this\", \"Just now\"),\r\n                            item(\"Heads up, toasts will stack automatically\", \"2 second ago\"),\r\n                        ]));\r\n                    },\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"You can also get fancy with flexbox utilities to align toasts horizontally and/or vertically.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    showCodepen: false,\r\n                    output: () => {\r\n                        const item = (msg, timer) => {\r\n                            return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({ debug: true, live: \"assertive\", atomic: true }, [\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.header([\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                        bgColor: \"primary\",\r\n                                        rounded: true,\r\n                                        marginEnd: 2,\r\n                                        style: { width: \"20px\", height: \"20px\" },\r\n                                    }),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.strong({ marginEnd: \"auto\" }, \"Bootstrap\"),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.small(timer),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.btnclose(),\r\n                                ]),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body(msg),\r\n                            ]);\r\n                        };\r\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                            aria: { live: \"polite\", atomic: \"true\" },\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItem: \"center\",\r\n                            width: 100,\r\n                            style: { minHeight: \"200px\" },\r\n                        }, item(\"Hello, world! This is a toast message.\", \"11 mins ago\"));\r\n                    },\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Accessibility\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Toasts are intended to be small interruptions to your visitors or users, so to help those with screen readers and similar assistive technologies, you should wrap your toasts in an {{https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions::aria-live region}}. Changes to live regions (such as injecting/updating a toast component) are automatically announced by screen readers without needing to move the user’s focus or otherwise interrupt the user. Additionally, include {{aria:{atomic:'true'/}/}} to ensure that the entire toast is always announced as a single (atomic) unit, rather than just announcing what was changed (which could lead to problems if you only update part of the toast’s content, or if displaying the same toast content at a later point in time). If the information needed is important for the process, e.g. for a list of errors in a form, then use the {{nav:docs/components/alert::alert component}} instead of toast.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Note that the live region needs to be present in the markup {{i::before}} the toast is generated or updated. If you dynamically generate both at the same time and inject them into the page, they will generally not be announced by assistive technologies.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"You also need to adapt the {{role}} and {{aria:{live:'...'/}/}} level depending on the content. If it’s an important message like an error, use {{role:'alert'}} {{aria:{live:'assertive'/}/}}, otherwise use {{role:'status'}} {{aria:{live:'polite'/}/}} attributes.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"As the content you’re displaying changes, be sure to update the {{nav:docs/components/toast#options::delay timeout}} so that users have enough time to read the toast.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.codepreview({\r\n                    type: \"js\",\r\n                    code: `\r\n\t\t\t\t\t\tnew h.div(\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tclass:\"toast\",\r\n\t\t\t\t\t\t\t\trole:\"alert\",\r\n\t\t\t\t\t\t\t\taria: { live: \"polite\", atomic: \"true\" },\r\n\t\t\t\t\t\t\t\tdata: { \"bs-delay\": \"10000\" },\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tnew h.div(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tclass:\"toast\",\r\n\t\t\t\t\t\t\t\t\trole:\"alert\",\r\n\t\t\t\t\t\t\t\t\taria: { live: \"assertive\", atomic: \"true\" },\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\"...\"\r\n\t\t\t\t\t\t\t)\t\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t`,\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    output: () => {\r\n                        return [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                                on: {\r\n                                    click: (_e) => {\r\n                                        const tItem = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({ live: \"assertive\", atomic: true, delay: 10000 }, [\r\n                                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.header([\r\n                                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                                    bgColor: \"primary\",\r\n                                                    rounded: true,\r\n                                                    marginEnd: 2,\r\n                                                    style: { width: \"20px\", height: \"20px\" },\r\n                                                }),\r\n                                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.strong({ marginEnd: \"auto\" }, \"Bootstrap\"),\r\n                                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.timer(),\r\n                                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.btnclose(),\r\n                                            ]),\r\n                                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body(\"This toast auto close {{delay}} set to 10 second\"),\r\n                                        ]);\r\n                                        _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.show(tItem);\r\n                                    },\r\n                                },\r\n                            }, \"Show delay timeout toast\"),\r\n                        ];\r\n                    },\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"When using {{autohide:false}}, you must add a close button to allow users to dismiss the toast.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    showCodepen: false,\r\n                    output: () => {\r\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({ debug: true, live: \"assertive\", atomic: true, autohide: false }, [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.header([\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                    bgColor: \"primary\",\r\n                                    rounded: true,\r\n                                    marginEnd: 2,\r\n                                    style: { width: \"20px\", height: \"20px\" },\r\n                                }),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.strong({ marginEnd: \"auto\" }, \"Bootstrap\"),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.timer(),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.btnclose(),\r\n                            ]),\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body(\"Hello, world! This is a toast message.\"),\r\n                        ]);\r\n                    },\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"While technically it’s possible to add focusable/actionable controls (such as additional buttons or links) in your toast, you should avoid doing this for autohiding toasts. Even if you give the toast a long {{nav:docs/components/toast#options::delay timeout}}, keyboard and assistive technology users may find it difficult to reach the toast in time to take action (since toasts don’t receive focus when they are displayed). If you absolutely must have further controls, Bootstrap recommend using a toast with {{autohide:false}}.\"),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"CSS\")]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Variables\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"As part of Bootstrap’s evolving CSS variables approach, toasts now use local CSS variables on {{.toast}} for enhanced real-time customization. Values for the CSS variables are set via Sass, so Sass customization is still supported, too.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.codepreview({\r\n                    type: \"css\",\r\n                    title: \"scss/_toast.scss\",\r\n                    source: \"https://github.com/twbs/bootstrap/blob/v5.3.0/scss/_toast.scss\",\r\n                    code: `\r\n\t\t\t\t\t\t--#{$prefix}toast-zindex: #{$zindex-toast};\r\n\t\t\t\t\t\t--#{$prefix}toast-padding-x: #{$toast-padding-x};\r\n\t\t\t\t\t\t--#{$prefix}toast-padding-y: #{$toast-padding-y};\r\n\t\t\t\t\t\t--#{$prefix}toast-spacing: #{$toast-spacing};\r\n\t\t\t\t\t\t--#{$prefix}toast-max-width: #{$toast-max-width};\r\n\t\t\t\t\t\t@include rfs($toast-font-size, --#{$prefix}toast-font-size);\r\n\t\t\t\t\t\t--#{$prefix}toast-color: #{$toast-color};\r\n\t\t\t\t\t\t--#{$prefix}toast-bg: #{$toast-background-color};\r\n\t\t\t\t\t\t--#{$prefix}toast-border-width: #{$toast-border-width};\r\n\t\t\t\t\t\t--#{$prefix}toast-border-color: #{$toast-border-color};\r\n\t\t\t\t\t\t--#{$prefix}toast-border-radius: #{$toast-border-radius};\r\n\t\t\t\t\t\t--#{$prefix}toast-box-shadow: #{$toast-box-shadow};\r\n\t\t\t\t\t\t--#{$prefix}toast-header-color: #{$toast-header-color};\r\n\t\t\t\t\t\t--#{$prefix}toast-header-bg: #{$toast-header-background-color};\r\n\t\t\t\t\t\t--#{$prefix}toast-header-border-color: #{$toast-header-border-color};\r\n\t\t\t\t\t`,\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Sass variables\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.codepreview({\r\n                    type: \"css\",\r\n                    title: \"scss/_variables.scss\",\r\n                    source: \"https://github.com/twbs/bootstrap/blob/v5.3.0/scss/_variables.scss\",\r\n                    code: `\r\n\t\t\t\t\t\t$toast-max-width:                   350px;\r\n\t\t\t\t\t\t$toast-padding-x:                   .75rem;\r\n\t\t\t\t\t\t$toast-padding-y:                   .5rem;\r\n\t\t\t\t\t\t$toast-font-size:                   .875rem;\r\n\t\t\t\t\t\t$toast-color:                       null;\r\n\t\t\t\t\t\t$toast-background-color:            rgba(var(--#{$prefix}body-bg-rgb), .85);\r\n\t\t\t\t\t\t$toast-border-width:                var(--#{$prefix}border-width);\r\n\t\t\t\t\t\t$toast-border-color:                var(--#{$prefix}border-color-translucent);\r\n\t\t\t\t\t\t$toast-border-radius:               var(--#{$prefix}border-radius);\r\n\t\t\t\t\t\t$toast-box-shadow:                  var(--#{$prefix}box-shadow);\r\n\t\t\t\t\t\t$toast-spacing:                     $container-padding-x;\r\n\r\n\t\t\t\t\t\t$toast-header-color:                var(--#{$prefix}secondary-color);\r\n\t\t\t\t\t\t$toast-header-background-color:     rgba(var(--#{$prefix}body-bg-rgb), .85);\r\n\t\t\t\t\t\t$toast-header-border-color:         $toast-border-color;\r\n\t\t\t\t\t`,\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Usage\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Initialize toasts via JavaScript:\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.codepreview({\r\n                    type: \"js\",\r\n                    code: `\r\n\t\t\t\t\t\tb.toast.show(document.getElementById(\"my-toast\"),\"top-end\");\r\n\t\t\t\t\t`,\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Triggers\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Dismissal can be achieved with the {{dismiss:'toast'}} property on a button {{b::within the toast}} as demonstrated below:\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.codepreview({\r\n                    type: \"js\",\r\n                    code: `\r\n\t\t\t\t\t\tnew b.button({ dismiss: \"toast\" }, \"Close\")\r\n\t\t\t\t\t\tnew b.toast.btnclose();\r\n\t\t\t\t\t`,\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"or on a button {{b::outside the toast}} using the additional {{target}} as demonstrated below:\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.codepreview({\r\n                    type: \"js\",\r\n                    code: `\r\n\t\t\t\t\t\tnew b.button({ dismiss: \"toast\", target: \"#my-toast\" }, \"Close\")\r\n\t\t\t\t\t\tnew b.toast.btnclose({ target: \"#my-toast\" });\r\n\t\t\t\t\t`,\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Options\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(`As options can be passed via data attributes or JavaScript, you can append an option name to {{data:{'bs-*':'{value}'\\}\\}}, as in {{data:{'bs-animation':'{value}'\\}\\}}. Make sure to change the case type of the option name from {{i::“camelCase”}} to {{i::“kebab-case”}} when passing the options via data attributes. For example, use {{data:{'bs-custom-class':'beautifier'\\}\\}} instead of {{data:{'bs-customClass':'beautifier'\\}\\}}.`),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(`As of Bootstrap 5.2.0, all components support an experimental reserved data attribute data-bs-config that can house simple component configuration as a JSON string. When an element has {{data:{'bs-config':'{\"delay\":0, \"title\":123}'/}/}} and {{data:{'bs-title':'456'/}/}} property, the final {{title}} value will be {{456}} and the separate data attributes will override values given on {{data:{'bs-config':''/}/}}. In addition, existing data attributes are able to house JSON values like {{data:{'bs-delay':'{\"show\":0,\"hide\":150}'/}/}}.`),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.table({\r\n                    item: [\r\n                        [\"Name\", \"Type\", \"Default\", \"Description\"],\r\n                        [\"{{animation}}\", \"boolean\", \"{{true}}\", \"Apply a CSS fade transition to the toast.\"],\r\n                        [\"{{autohide}}\", \"boolean\", \"{{true}}\", \"Automatically hide the toast after the delay.\"],\r\n                        [\"{{delay}}\", \"number\", \"{{5000}}\", \"Delay in milliseconds before hiding the toast.\"],\r\n                    ],\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Methods\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.alert({ color: \"danger\", callout: true }, \"{{b::All API methods are asynchronous and start a transition}}. They return to the caller as soon as the transition is started, but before it ends. In addition, a method call on a transitioning component will be ignored. {{https://getbootstrap.com/docs/5.3/getting-started/javascript/#asynchronous-functions-and-transitions::Learn more in Bootstrap JavaScript docs}}.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.table({\r\n                    item: [\r\n                        [\"Method\", \"Description\"],\r\n                        [\r\n                            \"{{dispose}}\",\r\n                            \"Hides an element’s toast. Your toast will remain on the DOM but won’t show anymore.\",\r\n                        ],\r\n                        [\r\n                            \"{{getInstance}}\",\r\n                            \"{{i::Static}} method which allows you to get the toast instance associated with a DOM element. For example: {{const myToastEl = document.getElementById('myToastEl') const myToast = bootstrap.Toast.getInstance(myToastEl)}} Returns a Bootstrap toast instance.\",\r\n                        ],\r\n                        [\r\n                            \"{{getOrCreateInstance}}\",\r\n                            \"{{i::Static}} method which allows you to get the toast instance associated with a DOM element, or create a new one, in case it wasn’t initialized. {{const myToastEl = document.getElementById('myToastEl') const myToast = bootstrap.Toast.getOrCreateInstance(myToastEl)}} Returns a Bootstrap toast instance.\",\r\n                        ],\r\n                        [\r\n                            \"{{hide}}\",\r\n                            \"Hides an element’s toast. {{b::Returns to the caller before the toast has actually been hidden}} (i.e. before the {{hidden.bs.toast}} event occurs). You have to manually call this method if you made {{autohide}} to {{false}}.\",\r\n                        ],\r\n                        [\"{{isShown}}\", \"Returns a boolean according to toast’s visibility state.\"],\r\n                        [\r\n                            \"{{show}}\",\r\n                            \"Reveals an element’s toast. {{b::Returns to the caller before the toast has actually been shown}} (i.e. before the {{shown.bs.toast}} event occurs). You have to manually call this method, instead your toast won’t show.\",\r\n                        ],\r\n                    ],\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    showConsole: true,\r\n                    output: () => {\r\n                        return [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ display: \"flex\", overflow: \"auto\" }, [\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                    width: 100,\r\n                                    marginEnd: 3,\r\n                                    bgColor: \"body-tertiary\",\r\n                                    rounded: true,\r\n                                    position: \"relative\",\r\n                                }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ position: \"absolute\", top: 50, start: 50, tMiddle: true }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({ id: \"example-toast\", live: \"assertive\", atomic: true, autohide: false }, [\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.header([\r\n                                        new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                            bgColor: \"primary\",\r\n                                            rounded: true,\r\n                                            marginEnd: 2,\r\n                                            style: { width: \"20px\", height: \"20px\" },\r\n                                        }),\r\n                                        new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.strong({ marginEnd: \"auto\" }, \"Bootstrap\"),\r\n                                        new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.small(\"Just now\"),\r\n                                        new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.btnclose(),\r\n                                    ]),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body(\"Example toast\"),\r\n                                ]))),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ marginStart: \"auto\" }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.btngroup({ vertical: true, weight: \"sm\" }, [\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                                        on: {\r\n                                            click: () => {\r\n                                                _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.show(\"#example-toast\");\r\n                                            },\r\n                                        },\r\n                                    }, \"show\"),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                                        on: {\r\n                                            click: () => {\r\n                                                _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.hide(\"#example-toast\");\r\n                                            },\r\n                                        },\r\n                                    }, \"hide\"),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                                        on: {\r\n                                            click: (event) => {\r\n                                                const target = event.target;\r\n                                                const result = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.isShown(\"#example-toast\");\r\n                                                _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.console(target, \"b.toast.isShown\", result ? \"true\" : \"false\", \"info\");\r\n                                            },\r\n                                        },\r\n                                    }, \"isShown\"),\r\n                                    new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                                        color: \"danger\",\r\n                                        on: {\r\n                                            click: () => {\r\n                                                _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.dispose(\"#example-toast\");\r\n                                            },\r\n                                        },\r\n                                    }, \"dispose\"),\r\n                                ])),\r\n                            ]),\r\n                        ];\r\n                    },\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Events\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.table({\r\n                    item: [\r\n                        [\"Event\", \"Description\"],\r\n                        [\r\n                            \"{{hide.bs.toast}}\",\r\n                            \"This event is fired immediately when the {{hide}} instance method has been called.\",\r\n                        ],\r\n                        [\r\n                            \"{{hidden.bs.toast}}\",\r\n                            \"This event is fired when the toast has finished being hidden from the user.\",\r\n                        ],\r\n                        [\r\n                            \"{{show.bs.toast}}\",\r\n                            \"This event fires immediately when the {{show}} instance method is called.\",\r\n                        ],\r\n                        [\"{{shown.bs.toast}}\", \"This event is fired when the toast has been made visible to the user.\"],\r\n                    ],\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    showConsole: true,\r\n                    output: () => {\r\n                        return new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                            on: {\r\n                                click: (btnEvent) => {\r\n                                    const tItem = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.item({\r\n                                        color: \"primary\",\r\n                                        autohide: false,\r\n                                        live: \"assertive\",\r\n                                        atomic: true,\r\n                                        on: {\r\n                                            \"shown.bs.toast\": (event) => {\r\n                                                const target = event.target;\r\n                                                _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.console(btnEvent.target, \"shown.bs.toast\", `Target: {{b::${_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.elemInfo(target)}}}`, \"success\");\r\n                                            },\r\n                                            \"hidden.bs.toast\": (event) => {\r\n                                                const target = event.target;\r\n                                                _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.console(btnEvent.target, \"hidden.bs.toast\", `Target: {{b::${_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.elemInfo(target)}}}`, \"danger\");\r\n                                            },\r\n                                        },\r\n                                    }, [\r\n                                        new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.header([\r\n                                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                                bgColor: \"primary\",\r\n                                                rounded: true,\r\n                                                marginEnd: 2,\r\n                                                style: { width: \"20px\", height: \"20px\" },\r\n                                            }),\r\n                                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.strong({ marginEnd: \"auto\" }, \"Bootstrap\"),\r\n                                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.timer(),\r\n                                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.btnclose(),\r\n                                        ]),\r\n                                        new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.body(\"Hello, world! This is a toast event example. This toast {{b::dose not}} close automaticly. Click on the close button to close this toast.\"),\r\n                                    ]);\r\n                                    //show the above toast on the top-end\r\n                                    _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.toast.show(tItem, \"top-end\");\r\n                                },\r\n                            },\r\n                        }, \"Show toast event\");\r\n                    },\r\n                }),\r\n            ]),\r\n        ];\r\n    },\r\n};\r\n\n\n//# sourceURL=webpack://@printf83/bsts-test/./build/docs/components/toast.js?");

/***/ })

}]);