"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_printf83_bsts_test"] = self["webpackChunk_printf83_bsts_test"] || []).push([["build_docs_components_collapse_js"],{

/***/ "./build/docs/components/collapse.js":
/*!*******************************************!*\
  !*** ./build/docs/components/collapse.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collapse: () => (/* binding */ collapse)\n/* harmony export */ });\n/* harmony import */ var _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @printf83/bsts */ \"./node_modules/@printf83/bsts/build/esm/index.js\");\n/* harmony import */ var _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../ctl/example/_index.js */ \"./build/ctl/example/_index.js\");\n\r\n\r\nconst collapse = {\r\n    title: \"Collapse\",\r\n    description: \"Toggle the visibility of content across your project with a few classes and Bootstrap JavaScript plugins.\",\r\n    item: () => {\r\n        return [\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"How it works\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"The collapse JavaScript plugin is used to show and hide content. {{b.collapse.button}} are used as triggers that are mapped to specific elements you toggle. Collapsing an element will animate the {{height}} from its current value to {{0}}. Given how CSS handles animations, you cannot use {{padding}} on a {{b.collapse.container}} element. Instead, use the class as an independent wrapping element.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.alert.container({ color: \"info\", callout: true }, \"The animation effect of this component is dependent on the {{prefers-reduced-motion}} media query. See the {{nav:docs/gettingstarted/accessibility#reduce_motion::reduced motion section of Bootstrap accessibility documentation}}.\")),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Example\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Click the buttons below to show and hide another element via class changes:\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.ul({\r\n                    item: [\r\n                        \"{{.collapse}} hides content\",\r\n                        \"{{.collapsing}} is applied during transitions\",\r\n                        \"{{.collapse.show}} shows content\",\r\n                    ],\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Generally, {{bsts}} recommend using a {{b.collapse.button}} with the {{target}} property. While not recommended from a semantic point of view, you can also use an {{b.collapse.button}} with the {{href}} property ({{bsts}} automaticly add {{role:'button'}} and the {{toggle:'collapse'}} because it's required by Bootstrap.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    outputAttr: { display: \"flex\", flex: \"wrap\", gap: 3 },\r\n                    output: () => {\r\n                        return [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ display: \"flex\", gap: 2 }, [\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.button({ href: \"#collapseExample\", controlfor: \"collapseExample\" }, \"Link with href\"),\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.button({ target: \"#collapseExample\", controlfor: \"collapseExample\" }, \"Button with data-bs-target\"),\r\n                            ]),\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.container({ id: \"collapseExample\" }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container(new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body(\"Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger.\"))),\r\n                        ];\r\n                    },\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Horizontal\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"The collapse plugin supports horizontal collapsing. Add the {{horizontal:true}} to {{b.collapse.container}} to transition the {{width}} instead of {{height}} and set a {{width}} on the immediate child element. Feel free to write your own custom Sass, use inline styles, or use Bootstrap {{nav:docs/utilities/sizing::width utilities}}.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.alert.container({ color: \"info\", callout: true }, \"Please note that while the example below has a {{min-height}} set to avoid excessive repaints in Bootstrap docs, this is not explicitly required. {{b::Only the}} {{width}} {{b::on the child element is required}}.\")),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    outputAttr: { display: \"grid\", gap: 3 },\r\n                    output: () => {\r\n                        return [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ display: \"flex\", gap: 2 }, [\r\n                                new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.button({ target: \"#collapseWidthExample\", controlfor: \"collapseWidthExample\" }, \"Toggle width collapse\"),\r\n                            ]),\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ style: { minHeight: \"120px\" } }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.container({ id: \"collapseWidthExample\", horizontal: true }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container({ style: { width: \"300px\" } }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body(\"This is some placeholder content for a horizontal collapse. It's hidden by default and shown when triggered.\")))),\r\n                        ];\r\n                    },\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Multiple toggles and targets\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"A {{b.collapse.button}} component can show and hide multiple elements by referencing them with a selector in its {{target}} or {{href}} property. Conversely, multiple {{b.collapse.button}} component can show and hide the same element if they each reference it with their {{target}} or {{href}} property.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    outputAttr: { display: \"flex\", flex: \"wrap\", gap: 2 },\r\n                    output: () => {\r\n                        const toggle1 = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.button({ href: \"#multiCollapseExample1\", controlfor: \"multiCollapseExample1\" }, \"Toggle first element\");\r\n                        const toggle2 = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.button({ target: \"#multiCollapseExample2\", controlfor: \"multiCollapseExample2\" }, \"Toggle second element\");\r\n                        const toggleBoth = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.button({ target: \".multi-collapse\", controlfor: \"multiCollapseExample1 multiCollapseExample2\" }, \"Toggle both element\");\r\n                        const collapse1 = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.container({ id: \"multiCollapseExample1\", class: \"multi-collapse\" }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container(new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body(\"Some placeholder content for the first collapse component of this multi-collapse example. This panel is hidden by default but revealed when the user activates the relevant trigger.\")));\r\n                        const collapse2 = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.container({ id: \"multiCollapseExample2\", class: \"multi-collapse\" }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container(new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body(\"Some placeholder content for the second collapse component of this multi-collapse example. This panel is hidden by default but revealed when the user activates the relevant trigger.\")));\r\n                        const rowDiv = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ padding: 0 }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ row: true, gutter: 2 }, [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: 6 }, collapse1),\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ col: 6 }, collapse2),\r\n                        ]));\r\n                        return [toggle1, toggle2, toggleBoth, rowDiv];\r\n                    },\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Accessibility\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Be sure to add {{aria-expanded}} to the control element. This attribute explicitly conveys the current state of the collapsible element tied to the control to screen readers and similar assistive technologies. If the collapsible element is closed by default, the attribute on the control element should have a value of {{aria-expanded='false'}}. If you’ve set the collapsible element to be open by default using the {{show}} class, set {{aria-expanded='true'}} on the control instead. The plugin will automatically toggle this attribute on the control based on whether or not the collapsible element has been opened or closed (via JavaScript, or because the user triggered another control element also tied to the same collapsible element). If the control element’s HTML element is not a button (e.g., an {{<a>}} or {{<div>}}), the attribute {{role='button'}} should be added to the element.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"{{bsts}} automaticly handle this when you using {{b.collapse.button}}.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"If your {{b.collapse.button}} component is targeting a single {{b.collapse.container}} component – i.e. the {{target}} property is pointing to an {{id}} selector – you should add the {{controlfor}} property to the control element, containing the {{id}} of the {{b.collapse.container}}. Modern screen readers and similar assistive technologies make use of this attribute to provide users with additional shortcuts to navigate directly to the {{b.collapse.container}} component itself.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Note that Bootstrap’s current implementation does not cover the various optional keyboard interactions described in the {{https://www.w3.org/WAI/ARIA/apg/patterns/accordion/::ARIA Authoring Practices Guide accordion pattern}} - you will need to include these yourself with custom JavaScript.\"),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"CSS\")]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Sass variables\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.codepreview({\r\n                    type: \"css\",\r\n                    title: \"scss/_variables.scss\",\r\n                    source: \"https://github.com/twbs/bootstrap/blob/v5.3.0/scss/_variables.scss\",\r\n                    code: `\r\n\t\t\t\t\t\t$transition-collapse:         height .35s ease;\r\n\t\t\t\t\t\t$transition-collapse-width:   width .35s ease;\t\r\n\t\t\t\t\t`,\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Classes\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Collapse transition classes can be found in {{scss/_transitions.scss}} as these are shared across multiple components (collapse and accordion).\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.codepreview({\r\n                    type: \"css\",\r\n                    title: \"scss/_transitions.scss\",\r\n                    source: \"https://github.com/twbs/bootstrap/blob/v5.3.0/scss/_transitions.scss\",\r\n                    code: `\r\n\t\t\t\t\t\t.collapse {\r\n\t\t\t\t\t\t&:not(.show) {\r\n\t\t\t\t\t\t\tdisplay: none;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t.collapsing {\r\n\t\t\t\t\t\theight: 0;\r\n\t\t\t\t\t\toverflow: hidden;\r\n\t\t\t\t\t\t@include transition($transition-collapse);\r\n\r\n\t\t\t\t\t\t&.collapse-horizontal {\r\n\t\t\t\t\t\t\twidth: 0;\r\n\t\t\t\t\t\t\theight: auto;\r\n\t\t\t\t\t\t\t@include transition($transition-collapse-width);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t`,\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.title(\"Usage\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"The collapse plugin utilizes a few classes to handle the heavy lifting:\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.ul({\r\n                    item: [\r\n                        \"{{.collapse}} hides the content\",\r\n                        \"{{.collapse.show}} shows the content\",\r\n                        \"{{.collapsing}} is added when the transition starts, and removed when it finishes\",\r\n                    ],\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"These classes can be found in {{_transitions.scss}}.\"),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Via data attributes\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Just use {{b.collapse.button}} and set {{target}} to the {{b.collapse.container}} to automatically assign control of one or more collapsible elements. The {{target}} property accepts a CSS selector to apply the collapse to. Be sure to use the {{b.collapse.container}} to the collapsible element. If you’d like it to default open, add the additional {{show}} property.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"To add accordion-like group management to a collapsible area, add set {{parent:'#selector'}} property. Refer to the {{nav:docs/components/accordion::accordion page}} for more information.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"{{bsts}} automaticly handle this when you using {{b.accordion.container}}.\"),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Via JavaScript\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Enable manually with:\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.codepreview({\r\n                    type: \"js\",\r\n                    code: `\r\n\t\t\t\t\t\tconst collapseElementList = document.querySelectorAll('.collapse')\r\n\t\t\t\t\t\tconst collapseList = [...collapseElementList].map(collapseEl => b.collapse.init(collapseEl))\r\n\t\t\t\t\t`,\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Options\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(`As options can be passed via data attributes or JavaScript, you can append an option name to {{data:{'bs-*':'{value}'\\}\\}}, as in {{data:{'bs-animation':'{value}'\\}\\}}. Make sure to change the case type of the option name from {{i::“camelCase”}} to {{i::“kebab-case”}} when passing the options via data attributes. For example, use {{data:{'bs-custom-class':'beautifier'\\}\\}} instead of {{data:{'bs-customClass':'beautifier'\\}\\}}.`),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(`As of Bootstrap 5.2.0, all components support an experimental reserved data attribute data-bs-config that can house simple component configuration as a JSON string. When an element has {{data:{'bs-config':'{\"delay\":0, \"title\":123}'/}/}} and {{data:{'bs-title':'456'/}/}} property, the final {{title}} value will be {{456}} and the separate data attributes will override values given on {{data:{'bs-config':''/}/}}. In addition, existing data attributes are able to house JSON values like {{data:{'bs-delay':'{\"show\":0,\"hide\":150}'/}/}}.`),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.table({\r\n                    item: [\r\n                        [\"Name\", \"Type\", \"Default\", \"Description\"],\r\n                        [\r\n                            \"{{parent}}\",\r\n                            \"selector, DOM element\",\r\n                            \"{{null}}\",\r\n                            \"If parent is provided, then all collapsible elements under the specified parent will be closed when this collapsible item is shown. (similar to traditional accordion behavior - this is dependent on the {{card}} class). The attribute has to be set on the target collapsible area.\",\r\n                        ],\r\n                        [\"{{toggle}}\", \"boolean\", \"{{true}}\", \"Toggles the collapsible element on invocation.\"],\r\n                    ],\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Methods\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.alert.container({ color: \"danger\", callout: true }, \"{{b::All API methods are asynchronous and start a transition}}. They return to the caller as soon as the transition is started, but before it ends. In addition, a method call on a transitioning component will be ignored. {{https://getbootstrap.com/docs/5.3/getting-started/javascript/#asynchronous-functions-and-transitions::Learn more in Bootstrap JavaScript docs}}.\")),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Activates your content as a collapsible element. Accepts an optional options object.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"You can create a collapse instance with the constructor, for example:\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.codepreview({\r\n                    type: \"js\",\r\n                    code: `\r\n\t\t\t\t\t\tconst bsCollapse = b.collapse.init('#myCollapse', {\r\n\t\t\t\t\t\t\ttoggle: false\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t`,\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.table({\r\n                    item: [\r\n                        [\"Method\", \"Description\"],\r\n                        [\"{{dispose}}\", \"Destroys an element’s collapse. (Removes stored data on the DOM element)\"],\r\n                        [\r\n                            \"{{getInstance}}\",\r\n                            \"Static method which allows you to get the collapse instance associated to a DOM element, you can use it like this: {{bootstrap.Collapse.getInstance(element)}}.\",\r\n                        ],\r\n                        [\r\n                            \"{{getOrCreateInstance}}\",\r\n                            \"Static method which returns a collapse instance associated to a DOM element or create a new one in case it wasn’t initialized. You can use it like this: {{bootstrap.Collapse.getOrCreateInstance(element)}}.\",\r\n                        ],\r\n                        [\r\n                            \"{{hide}}\",\r\n                            \"Hides a collapsible element. {{b::Returns to the caller before the collapsible element has actually been hidden}} (e.g., before the {{hidden.bs.collapse}} event occurs).\",\r\n                        ],\r\n                        [\r\n                            \"{{show}}\",\r\n                            \"Shows a collapsible element. {{b::Returns to the caller before the collapsible element has actually been shown}} (e.g., before the {{shown.bs.collapse}} event occurs).\",\r\n                        ],\r\n                        [\r\n                            \"{{toggle}}\",\r\n                            \"Toggles a collapsible element to shown or hidden. {{b::Returns to the caller before the collapsible element has actually been shown or hidden}} (i.e. before the {{shown.bs.collapse}} or {{hidden.bs.collapse}} event occurs).\",\r\n                        ],\r\n                    ],\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    showConsole: true,\r\n                    output: () => {\r\n                        const collapseContent = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body(\"Some placeholder content for the collapse component.\");\r\n                        const collapseContainer = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.container({\r\n                            id: \"example-collapse\",\r\n                            autoInit: false,\r\n                        }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container(collapseContent));\r\n                        const initButton = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                            color: \"success\",\r\n                            on: {\r\n                                click: (event) => {\r\n                                    const elem = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.init(\"#example-collapse\");\r\n                                    _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.console(event.target, \"b.collapse.init\", elem ? elem : \"null\", elem ? \"success\" : \"danger\");\r\n                                },\r\n                            },\r\n                        }, \"init\");\r\n                        const getInstanceButton = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                            color: \"success\",\r\n                            on: {\r\n                                click: (event) => {\r\n                                    const elem = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.getInstance(\"#example-collapse\");\r\n                                    _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.console(event.target, \"b.collapse.getInstance\", elem ? elem : \"null\", elem ? \"success\" : \"danger\");\r\n                                },\r\n                            },\r\n                        }, \"getInstance\");\r\n                        const getOrCreateInstanceButton = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                            color: \"success\",\r\n                            on: {\r\n                                click: (event) => {\r\n                                    const elem = _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.getOrCreateInstance(\"#example-collapse\");\r\n                                    _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.console(event.target, \"b.collapse.getOrCreateInstance\", elem, elem ? \"success\" : \"danger\");\r\n                                },\r\n                            },\r\n                        }, \"getOrCreateInstance\");\r\n                        const hideButton = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                            on: {\r\n                                click: () => {\r\n                                    _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.hide(\"#example-collapse\");\r\n                                },\r\n                            },\r\n                        }, \"hide\");\r\n                        const showButton = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                            on: {\r\n                                click: () => {\r\n                                    _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.show(\"#example-collapse\");\r\n                                },\r\n                            },\r\n                        }, \"show\");\r\n                        const toggleButton = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                            on: {\r\n                                click: () => {\r\n                                    _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.toggle(\"#example-collapse\");\r\n                                },\r\n                            },\r\n                        }, \"toggle\");\r\n                        const disposeButton = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.button({\r\n                            color: \"danger\",\r\n                            on: {\r\n                                click: () => {\r\n                                    _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.dispose(\"#example-collapse\");\r\n                                },\r\n                            },\r\n                        }, \"dispose\");\r\n                        const buttonGroup = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.btngroup({ vertical: true, weight: \"sm\" }, [\r\n                            initButton,\r\n                            getInstanceButton,\r\n                            getOrCreateInstanceButton,\r\n                            hideButton,\r\n                            showButton,\r\n                            toggleButton,\r\n                            disposeButton,\r\n                        ]);\r\n                        const previewContainer = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                            width: 100,\r\n                            marginEnd: 3,\r\n                            bgColor: \"body-tertiary\",\r\n                            rounded: true,\r\n                            position: \"relative\",\r\n                        }, [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                                position: \"absolute\",\r\n                                top: 50,\r\n                                start: 50,\r\n                                tMiddle: true,\r\n                            }, collapseContainer),\r\n                        ]);\r\n                        const controlContainer = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({\r\n                            marginStart: \"auto\",\r\n                        }, buttonGroup);\r\n                        const mainContainer = new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.h.div({ display: \"flex\" }, [previewContainer, controlContainer]);\r\n                        return [mainContainer];\r\n                    },\r\n                }),\r\n            ]),\r\n            //----------------------\r\n            new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.section([\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.subtitle(\"Events\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.text(\"Bootstrap’s collapse class exposes a few events for hooking into collapse functionality.\"),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.table({\r\n                    item: [\r\n                        [\"Event type\", \"Description\"],\r\n                        [\r\n                            \"{{hide.bs.collapse}}\",\r\n                            \"This event is fired immediately when the {{hide}} method has been called.\",\r\n                        ],\r\n                        [\r\n                            \"{{hidden.bs.collapse}}\",\r\n                            \"This event is fired when a collapse element has been hidden from the user (will wait for CSS transitions to complete).\",\r\n                        ],\r\n                        [\r\n                            \"{{show.bs.collapse}}\",\r\n                            \"This event fires immediately when the {{show}} instance method is called.\",\r\n                        ],\r\n                        [\r\n                            \"{{shown.bs.collapse}}\",\r\n                            \"This event is fired when a collapse element has been made visible to the user (will wait for CSS transitions to complete).\",\r\n                        ],\r\n                    ],\r\n                }),\r\n                new _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.code({\r\n                    outputAttr: { display: \"flex\", flex: \"wrap\", gap: 3 },\r\n                    showConsole: true,\r\n                    output: () => {\r\n                        return [\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.button({ target: \"#collapseEventExample\", controlfor: \"collapseEventExample\" }, \"Collapse event\"),\r\n                            new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.collapse.container({\r\n                                id: \"collapseEventExample\",\r\n                                on: {\r\n                                    \"hidden.bs.collapse\": (event) => {\r\n                                        let target = event.target;\r\n                                        _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.console(event.target, \"hidden.bs.collapse\", `Target: {{b::${_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.elemInfo(target)}}}`, \"danger\");\r\n                                    },\r\n                                    \"shown.bs.collapse\": (event) => {\r\n                                        let target = event.target;\r\n                                        _ctl_example_index_js__WEBPACK_IMPORTED_MODULE_1__.console(event.target, \"shown.bs.collapse\", `Target: {{b::${_printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.core.elemInfo(target)}}}`, \"success\");\r\n                                    },\r\n                                },\r\n                            }, new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.container(new _printf83_bsts__WEBPACK_IMPORTED_MODULE_0__.b.card.body(\"Some placeholder content for the collapse component. This panel is hidden by default but revealed when the user activates the relevant trigger.\"))),\r\n                        ];\r\n                    },\r\n                }),\r\n            ]),\r\n        ];\r\n    },\r\n};\r\n\n\n//# sourceURL=webpack://@printf83/bsts-test/./build/docs/components/collapse.js?");

/***/ })

}]);