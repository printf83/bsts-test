"use strict";(self.webpackChunk_printf83_bsts_test=self.webpackChunk_printf83_bsts_test||[]).push([[5899],{5899:(e,t,i)=>{i.r(t),i.d(t,{vertical_rule:()=>a});var n=i(195),s=i(7763);const a={title:"Vertical rule",description:"Use the custom vertical rule helper to create vertical dividers like the {{<hr>}} element.",item:()=>[new s.qi([new s.TN("How it works"),new s.fL("Vertical rules are inspired by the {{<hr>}} element, allowing you to create vertical dividers in common layouts. They’re styled just like {{<hr>}} elements:"),new s.ul({item:["They’re {{1px}} wide","They have {{min-height}} of {{1em}}","Their color is set via {{currentColor}} and {{opacity}}"]}),new s.fL("Customize them with additional styles as needed.")]),new s.qi([new s.TN("Example"),new s.TU({output:()=>new n.b.a7}),new s.fL("Vertical rules scale their height in flex layouts:"),new s.TU({output:()=>new n.h.hi({display:"flex",style:{height:"200px"}},new n.b.a7)})]),new s.qi([new s.TN("With stack"),new s.fL("They can also be used in {{nav:docs/helpers/stacks::stacks}}:"),new s.TU({outputAttr:{class:"flex-box"},output:()=>new n.h.hi({hstack:!0,gap:3},[new n.h.hi({padding:2},"First item"),new n.h.hi({padding:2,marginStart:"auto"},"Second item"),new n.b.a7,new n.h.hi({padding:2},"Third item")])})])]}}}]);