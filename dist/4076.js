"use strict";(self.webpackChunk_printf83_bsts_test=self.webpackChunk_printf83_bsts_test||[]).push([[4076],{4076:(t,e,n)=>{n.r(e),n.d(e,{breakpoints:()=>s});var i=n(7763);const s={title:"Breakpoints",description:"Breakpoints are customizable widths that determine how your responsive layout behaves across device or viewport sizes in Bootstrap.",item:()=>[new i.qi([new i.TN("Core concepts"),new i.ul({item:["{{b::Breakpoints are the building blocks of responsive design}}. Use them to control when your layout can be adapted at a particular viewport or device size.","{{b::Use media queries to architect your CSS by breakpoint}}. Media queries are a feature of CSS that allow you to conditionally apply styles based on a set of browser and operating system parameters. Bootstrap most commonly use {{min-width}} in Bootstrap media queries.","{{b::Mobile first, responsive design is the goal}}. Bootstrap’s CSS aims to apply the bare minimum of styles to make a layout work at the smallest breakpoint, and then layers on styles to adjust that design for larger devices. This optimizes your CSS, improves rendering time, and provides a great experience for your visitors."]})]),new i.qi([new i.TN("Available breakpoints"),new i.fL("Bootstrap includes six default breakpoints, sometimes referred to as {{i::grid tiers}}, for building responsively. These breakpoints can be customized if you’re using Bootstrap source Sass files."),new i.Kz({item:[["Breakpoint","Class infix","Dimensions"],["Extra small","{{i::None}}","<576px"],["Small","{{sm}}","≥576px"],["Medium","{{md}}","≥768px"],["Large","{{lg}}","≥992px"],["Extra large","{{xl}}","≥1200px"],["Extra extra large","{{xxl}}","≥1400px"]]}),new i.fL("Each breakpoint was chosen to comfortably hold containers whose widths are multiples of 12. Breakpoints are also representative of a subset of common device sizes and viewport dimensions—they don’t specifically target every use case or device. Instead, the ranges provide a strong and consistent foundation to build on for nearly any device."),new i.fL("These breakpoints are customizable via Sass—you’ll find them in a Sass map in Bootstrap {{_variables.scss}} stylesheet."),new i.LX({type:"css",title:"scss/_variables.scss",source:"https://github.com/twbs/bootstrap/blob/v5.3.0/scss/_variables.scss",code:"\n\t\t\t\t\t\t$grid-breakpoints: (\n\t\t\t\t\t\txs: 0,\n\t\t\t\t\t\tsm: 576px,\n\t\t\t\t\t\tmd: 768px,\n\t\t\t\t\t\tlg: 992px,\n\t\t\t\t\t\txl: 1200px,\n\t\t\t\t\t\txxl: 1400px\n\t\t\t\t\t\t);\n\t\t\t\t\t"}),new i.fL("For more information and examples on how to modify Bootstrap Sass maps and variables, please refer to {{nav:docs/layout/grid#sass::the Sass section of the Grid documentation}}.")]),new i.qi([new i.TN("Media queries"),new i.fL("Since Bootstrap is developed to be mobile first, Bootstrap use a handful of {{https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries::media queries}} to create sensible breakpoints for Bootstrap layouts and interfaces. These breakpoints are mostly based on minimum viewport widths and allow us to scale up elements as the viewport changes.")]),new i.qi([new i.Oc("Min-width"),new i.fL("Bootstrap primarily uses the following media query ranges—or breakpoints—in Bootstrap source Sass files for Bootstrap layout, grid system, and components."),new i.LX({type:"css",code:"\n\t\t\t\t\t\t// Source mixins\n\n\t\t\t\t\t\t// No media query necessary for xs breakpoint as it's effectively '@media (min-width: 0) { ... }'\n\t\t\t\t\t\t@include media-breakpoint-up(sm) { ... }\n\t\t\t\t\t\t@include media-breakpoint-up(md) { ... }\n\t\t\t\t\t\t@include media-breakpoint-up(lg) { ... }\n\t\t\t\t\t\t@include media-breakpoint-up(xl) { ... }\n\t\t\t\t\t\t@include media-breakpoint-up(xxl) { ... }\n\n\t\t\t\t\t\t// Usage\n\n\t\t\t\t\t\t// Example: Hide starting at 'min-width: 0', and then show at the 'sm' breakpoint\n\t\t\t\t\t\t.custom-class {\n\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@include media-breakpoint-up(sm) {\n\t\t\t\t\t\t.custom-class {\n\t\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t"}),new i.fL("These Sass mixins translate in Bootstrap compiled CSS using the values declared in Bootstrap Sass variables. For example:"),new i.LX({type:"css",code:"\n\t\t\t\t\t\t// X-Small devices (portrait phones, less than 576px)\n\t\t\t\t\t\t// No media query for 'xs' since this is the default in Bootstrap\n\n\t\t\t\t\t\t// Small devices (landscape phones, 576px and up)\n\t\t\t\t\t\t@media (min-width: 576px) { ... }\n\n\t\t\t\t\t\t// Medium devices (tablets, 768px and up)\n\t\t\t\t\t\t@media (min-width: 768px) { ... }\n\n\t\t\t\t\t\t// Large devices (desktops, 992px and up)\n\t\t\t\t\t\t@media (min-width: 992px) { ... }\n\n\t\t\t\t\t\t// X-Large devices (large desktops, 1200px and up)\n\t\t\t\t\t\t@media (min-width: 1200px) { ... }\n\n\t\t\t\t\t\t// XX-Large devices (larger desktops, 1400px and up)\n\t\t\t\t\t\t@media (min-width: 1400px) { ... }\n\n\t\t\t\t\t\t"})]),new i.qi([new i.Oc("Max-width"),new i.fL("Bootstrap occasionally use media queries that go in the other direction (the given screen size or smaller):"),new i.LX({type:"css",code:"\n\t\t\t\t\t\t// No media query necessary for xs breakpoint as it's effectively '@media (max-width: 0) { ... }'\n\t\t\t\t\t\t@include media-breakpoint-down(sm) { ... }\n\t\t\t\t\t\t@include media-breakpoint-down(md) { ... }\n\t\t\t\t\t\t@include media-breakpoint-down(lg) { ... }\n\t\t\t\t\t\t@include media-breakpoint-down(xl) { ... }\n\t\t\t\t\t\t@include media-breakpoint-down(xxl) { ... }\n\n\t\t\t\t\t\t// Example: Style from medium breakpoint and down\n\t\t\t\t\t\t@include media-breakpoint-down(md) {\n\t\t\t\t\t\t.custom-class {\n\t\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t"}),new i.fL("These mixins take those declared breakpoints, subtract {{.02px}} from them, and use them as Bootstrap {{max-width}} values. For example:"),new i.LX({type:"css",code:"\n\t\t\t\t\t\t// 'xs' returns only a ruleset and no media query\n\t\t\t\t\t\t// ... { ... }\n\n\t\t\t\t\t\t// 'sm' applies to x-small devices (portrait phones, less than 576px)\n\t\t\t\t\t\t@media (max-width: 575.98px) { ... }\n\n\t\t\t\t\t\t// 'md' applies to small devices (landscape phones, less than 768px)\n\t\t\t\t\t\t@media (max-width: 767.98px) { ... }\n\n\t\t\t\t\t\t// 'lg' applies to medium devices (tablets, less than 992px)\n\t\t\t\t\t\t@media (max-width: 991.98px) { ... }\n\n\t\t\t\t\t\t// 'xl' applies to large devices (desktops, less than 1200px)\n\t\t\t\t\t\t@media (max-width: 1199.98px) { ... }\n\n\t\t\t\t\t\t// 'xxl' applies to x-large devices (large desktops, less than 1400px)\n\t\t\t\t\t\t@media (max-width: 1399.98px) { ... }\n\n\t\t\t\t\t\t"}),new i.Z9({color:"warning",callout:!0},"{{b::Why subtract .02px?}} Browsers don’t currently support {{https://www.w3.org/TR/mediaqueries-4/#range-context::range context queries}}, so Bootstrap work around the limitations of {{https://www.w3.org/TR/mediaqueries-4/#mq-min-max::min- and max- prefixes}} and viewports with fractional widths (which can occur under certain conditions on high-dpi devices, for instance) by using values with higher precision.")]),new i.qi([new i.Oc("Single breakpoint"),new i.fL("There are also media queries and mixins for targeting a single segment of screen sizes using the minimum and maximum breakpoint widths."),new i.LX({type:"css",code:"\n\t\t\t\t\t\t\t@include media-breakpoint-only(xs) { ... }\n\t\t\t\t\t\t\t@include media-breakpoint-only(sm) { ... }\n\t\t\t\t\t\t\t@include media-breakpoint-only(md) { ... }\n\t\t\t\t\t\t\t@include media-breakpoint-only(lg) { ... }\n\t\t\t\t\t\t\t@include media-breakpoint-only(xl) { ... }\n\t\t\t\t\t\t\t@include media-breakpoint-only(xxl) { ... }\n\t\t\t\t\t\t"}),new i.fL("For example the {{@include media-breakpoint-only(md) { ... } }}will result in :"),new i.LX({type:"css",code:"@media (min-width: 768px) and (max-width: 991.98px) { ... }"})]),new i.qi([new i.Oc("Between breakpoints"),new i.fL("Similarly, media queries may span multiple breakpoint widths:"),new i.LX({type:"css",code:"@include media-breakpoint-between(md, xl) { ... }"}),new i.fL("Which results in:"),new i.LX({type:"css",code:"\n\t\t\t\t\t\t// Example\n\t\t\t\t\t\t// Apply styles starting from medium devices and up to extra large devices\n\t\t\t\t\t\t@media (min-width: 768px) and (max-width: 1199.98px) { ... }\n\n\t\t\t\t\t\t"})])]}}}]);